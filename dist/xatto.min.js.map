{"version":3,"sources":["dist/xatto.js"],"names":["global","factory","exports","module","define","amd","xatto","this","ATTRIBUTES","CHILDREN","KEY","NAME","CONTEXT","EXTRA","RECYCLE","SLICE","TEXT","deepGet","target","key","separator","idx","indexOf","slice","deepSet","value","current","nexts","next","split","parseInt","TEXT_NODE","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","resolveNode","node","parentNode","attributes","context","sliced","path","defaultValue","extra","name","updateAttribute","element","oldValue","isSVG","eventListener","events","addEventListener","removeEventListener","setAttribute","removeAttribute","getKey","removeElement","parent","done","removeChild","removeChildren","childNodes","ondestroy","cb","onremove","patch","oldNode","lifecycle","newElement","createElement","isTextNode","document","createTextNode","createElementNS","callback_1","oncreate","push","nodeValue","appendChild","name_1","insertBefore","oldAttributes","attrs","callback","onupdate","updateElement","oldKeyed","newKeyed","oldElements","oldChildren","children","i_1","oldKey","k","newKey","recycle","keyed","createVDOM","mayBeTextNode","x","rest","_i","pop","Array","isArray","concat","unshift","keys","atto","view","scheduled","rootContext","mutate","actualContext","Promise","then","newContext","targetContext_1","entries","map","_a","v","resolve","render","rendered","renderedError","event","currentTarget","type","e"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.xatto = {})));\n}(this, (function (exports) { 'use strict';\n\n  var ATTRIBUTES = 'attributes';\r\n  var CHILDREN = 'children';\r\n  var KEY = 'key';\r\n  var NAME = 'name';\n\n  var CONTEXT = 'xa-context';\r\n  var EXTRA = 'xa-extra';\r\n  var RECYCLE = 'xa-recycle';\r\n  var SLICE = 'xa-slice';\r\n  var TEXT = 'xa-text';\n\n  /**\r\n   * Get an item from an object using separator notation.\r\n   *\r\n   * @typeparam {T}\r\n   * @param {any} target\r\n   * @param {string} key\r\n   * @param {string} separator\r\n   * @return {T}\r\n   */\r\n  function deepGet(target, key, separator) {\r\n      if (separator === void 0) { separator = '.'; }\r\n      while (true) {\r\n          if (target == null) {\r\n              return target;\r\n          }\r\n          var idx = key.indexOf(separator);\r\n          if (idx < 0) {\r\n              return target[key];\r\n          }\r\n          target = target[key.slice(0, idx)];\r\n          key = key.slice(idx + 1);\r\n      }\r\n  }\n\n  /**\r\n   * Set an object item to a given value using separator notation.\r\n   *\r\n   * @param {any} target\r\n   * @param {string} key\r\n   * @param {any} value\r\n   * @param {string} separator\r\n   * @return {boolean}\r\n   */\r\n  function deepSet(target, key, value, separator) {\r\n      if (separator === void 0) { separator = '.'; }\r\n      while (true) {\r\n          if ('object' !== typeof target) {\r\n              return false;\r\n          }\r\n          var idx = key.indexOf(separator);\r\n          if (idx < 0) {\r\n              target[key] = value;\r\n              return true;\r\n          }\r\n          var current = key.slice(0, idx);\r\n          var nexts = key.slice(idx + 1);\r\n          if (null == target[current]) {\r\n              var next = nexts.split(separator, 1)[0];\r\n              target[current] = next === \"\" + parseInt(next, 10) ? [] : {};\r\n          }\r\n          target = target[current];\r\n          key = nexts;\r\n      }\r\n  }\n\n  var TEXT_NODE = 'xa-txt';\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n  See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\r\n\r\n  var __assign = Object.assign || function __assign(t) {\r\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n          s = arguments[i];\r\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n      }\r\n      return t;\r\n  };\n\n  function resolveNode(node, parentNode) {\r\n      var attributes = node && node[ATTRIBUTES];\r\n      if (attributes) {\r\n          var context = attributes[CONTEXT]\r\n              || (parentNode && parentNode[ATTRIBUTES] && parentNode[ATTRIBUTES][CONTEXT])\r\n              || {};\r\n          var slice = attributes[SLICE];\r\n          var sliced = void 0;\r\n          if ('object' !== typeof slice) {\r\n              slice = [slice];\r\n          }\r\n          var path = slice[0];\r\n          if (path) {\r\n              sliced = deepGet(context, path);\r\n              if (!sliced) {\r\n                  var defaultValue = slice[1] || {};\r\n                  sliced = __assign({}, defaultValue);\r\n                  deepSet(context, path, sliced);\r\n              }\r\n              context = sliced;\r\n          }\r\n          var extra = __assign({}, (attributes[EXTRA] || {}), (parentNode && parentNode[ATTRIBUTES] && parentNode[ATTRIBUTES][EXTRA] || {}));\r\n          attributes[CONTEXT] = context;\r\n          attributes[EXTRA] = extra;\r\n      }\r\n      return (node && typeof node.name === \"function\")\r\n          ? resolveNode(node.name(node[ATTRIBUTES], node[CHILDREN]), node)\r\n          : node != null\r\n              ? node\r\n              : \"\";\r\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSVG, eventListener) {\r\n      if (name === \"key\" || 'object' === typeof value) {\r\n          // noop\r\n      }\r\n      else {\r\n          if (name[0] === \"o\" && name[1] === \"n\") {\r\n              if (!element.events) {\r\n                  element.events = {};\r\n              }\r\n              element.events[(name = name.slice(2))] = value;\r\n              if (value) {\r\n                  if (!oldValue) {\r\n                      element.addEventListener(name, eventListener);\r\n                  }\r\n              }\r\n              else {\r\n                  element.removeEventListener(name, eventListener);\r\n              }\r\n          }\r\n          else if (name in element && name !== \"list\" && !isSVG) {\r\n              element[name] = value == null ? \"\" : value;\r\n          }\r\n          else if (value != null && value !== false) {\r\n              element.setAttribute(name, value);\r\n          }\r\n          if (value == null || value === false) {\r\n              element.removeAttribute(name);\r\n          }\r\n      }\r\n  }\n\n  function createElement(node, lifecycle, isSVG, eventListener) {\r\n      var isTextNode = node[NAME] === TEXT_NODE;\r\n      var element = isTextNode\r\n          ? document.createTextNode(node[ATTRIBUTES][TEXT])\r\n          : (isSVG = isSVG || node[NAME] === \"svg\")\r\n              ? document.createElementNS(\"http://www.w3.org/2000/svg\", node[NAME])\r\n              : document.createElement(node[NAME]);\r\n      var attributes = node[ATTRIBUTES];\r\n      if (attributes) {\r\n          var callback_1 = attributes.oncreate;\r\n          if (callback_1) {\r\n              lifecycle.push(function () {\r\n                  callback_1(element, {}, attributes[CONTEXT], attributes[EXTRA]);\r\n              });\r\n          }\r\n          if (isTextNode) {\r\n              element.nodeValue = node[ATTRIBUTES][TEXT];\r\n          }\r\n          else {\r\n              for (var i = 0; i < node[CHILDREN].length; i++) {\r\n                  element.appendChild(createElement((node[CHILDREN][i] = resolveNode(node[CHILDREN][i], node)), lifecycle, isSVG, eventListener));\r\n              }\r\n              for (var name_1 in attributes) {\r\n                  updateAttribute(element, name_1, attributes[name_1], null, isSVG, eventListener);\r\n              }\r\n          }\r\n          element.context = attributes[CONTEXT];\r\n          element.extra = attributes[EXTRA];\r\n      }\r\n      return element;\r\n  }\n\n  function getKey(node) {\r\n      return node ? node.key : null;\r\n  }\n\n  function removeChildren(element, node) {\r\n      var attributes = node[ATTRIBUTES];\r\n      if (attributes) {\r\n          for (var i = 0; i < node[CHILDREN].length; i++) {\r\n              removeChildren(element.childNodes[i], node[CHILDREN][i]);\r\n          }\r\n          if (attributes.ondestroy) {\r\n              attributes.ondestroy(element, attributes, attributes[CONTEXT], attributes[EXTRA]);\r\n          }\r\n      }\r\n      return element;\r\n  }\n\n  function removeElement(parent, element, node) {\r\n      function done() {\r\n          parent.removeChild(removeChildren(element, node));\r\n      }\r\n      var attributes = node[ATTRIBUTES] || {};\r\n      var cb = attributes.onremove;\r\n      if (cb) {\r\n          cb(element, done, attributes, attributes[CONTEXT], attributes[EXTRA]);\r\n      }\r\n      else {\r\n          done();\r\n      }\r\n  }\n\n  function updateElement(element, oldAttributes, attributes, lifecycle, isSVG, eventListener) {\r\n      var attrs = __assign({}, oldAttributes, attributes);\r\n      for (var name_1 in attrs) {\r\n          if (attributes[name_1] !==\r\n              (name_1 === \"value\" || name_1 === \"checked\"\r\n                  ? element[name_1]\r\n                  : oldAttributes[name_1])) {\r\n              updateAttribute(element, name_1, attributes[name_1], oldAttributes[name_1], isSVG, eventListener);\r\n          }\r\n      }\r\n      element.context = attributes[CONTEXT];\r\n      element.extra = attributes[EXTRA];\r\n      var callback = attributes[RECYCLE] ? attributes.oncreate : attributes.onupdate;\r\n      if (callback) {\r\n          lifecycle.push(function () {\r\n              callback(element, oldAttributes, attributes[CONTEXT], attributes[EXTRA]);\r\n          });\r\n      }\r\n  }\n\n  function patch(parent, element, oldNode, node, lifecycle, isSVG, eventListener) {\r\n      if (isSVG === void 0) { isSVG = false; }\r\n      if (node === oldNode) {\r\n          // noop\r\n      }\r\n      else if (oldNode == null || oldNode.name !== node.name) {\r\n          var newElement = createElement(node, lifecycle, isSVG, eventListener);\r\n          parent.insertBefore(newElement, element);\r\n          if (oldNode != null) {\r\n              removeElement(parent, element, oldNode);\r\n          }\r\n          element = newElement;\r\n      }\r\n      else if (oldNode.name === TEXT_NODE) {\r\n          element.nodeValue = node[ATTRIBUTES][TEXT];\r\n      }\r\n      else {\r\n          updateElement(element, oldNode[ATTRIBUTES], node[ATTRIBUTES], lifecycle, (isSVG = isSVG || node.name === \"svg\"), eventListener);\r\n          var oldKeyed = {};\r\n          var newKeyed = {};\r\n          var oldElements = [];\r\n          var oldChildren = oldNode[CHILDREN];\r\n          var children = node[CHILDREN];\r\n          for (var i_1 = 0; i_1 < oldChildren.length; i_1++) {\r\n              oldElements[i_1] = element.childNodes[i_1];\r\n              var oldKey = getKey(oldChildren[i_1]);\r\n              if (oldKey != null) {\r\n                  oldKeyed[oldKey] = [oldElements[i_1], oldChildren[i_1]];\r\n              }\r\n          }\r\n          var i = 0;\r\n          var k = 0;\r\n          while (k < children.length) {\r\n              var oldKey = getKey(oldChildren[i]);\r\n              var newKey = getKey(children[k] = resolveNode(children[k], node));\r\n              if (newKeyed[oldKey]) {\r\n                  i++;\r\n                  continue;\r\n              }\r\n              if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\r\n                  if (oldKey == null) {\r\n                      removeElement(element, oldElements[i], oldChildren[i]);\r\n                  }\r\n                  i++;\r\n                  continue;\r\n              }\r\n              var recycle = (children[k][ATTRIBUTES] || {})[RECYCLE];\r\n              if (newKey == null || true === recycle) {\r\n                  if (oldKey == null) {\r\n                      patch(element, oldElements[i], oldChildren[i], children[k], lifecycle, isSVG, eventListener);\r\n                      k++;\r\n                  }\r\n                  i++;\r\n              }\r\n              else {\r\n                  var keyed = oldKeyed[newKey] || [];\r\n                  if (oldKey === newKey) {\r\n                      patch(element, keyed[0], keyed[1], children[k], lifecycle, isSVG, eventListener);\r\n                      i++;\r\n                  }\r\n                  else if (keyed[0]) {\r\n                      patch(element, element.insertBefore(keyed[0], oldElements[i]), keyed[1], children[k], lifecycle, isSVG, eventListener);\r\n                  }\r\n                  else {\r\n                      patch(element, oldElements[i], null, children[k], lifecycle, isSVG, eventListener);\r\n                  }\r\n                  newKeyed[newKey] = children[k];\r\n                  k++;\r\n              }\r\n          }\r\n          while (i < oldChildren.length) {\r\n              if (getKey(oldChildren[i]) == null) {\r\n                  removeElement(element, oldElements[i], oldChildren[i]);\r\n              }\r\n              i++;\r\n          }\r\n          for (var key in oldKeyed) {\r\n              if (!newKeyed[key]) {\r\n                  removeElement(element, oldKeyed[key][0], oldKeyed[key][1]);\r\n              }\r\n          }\r\n      }\r\n      return element;\r\n  }\n\n  function createVDOM(mayBeTextNode, name, attributes, children) {\r\n      if (attributes === void 0) { attributes = {}; }\r\n      if (children === void 0) { children = []; }\r\n      var node = {};\r\n      node[NAME] = name;\r\n      node[ATTRIBUTES] = attributes;\r\n      node[CHILDREN] = children;\r\n      node[KEY] = attributes.key;\r\n      if (mayBeTextNode && 'function' !== typeof name) {\r\n          node[NAME] = TEXT_NODE;\r\n          node[ATTRIBUTES][TEXT] = name;\r\n      }\r\n      return node;\r\n  }\n\n  function isVDOM(value) {\r\n      return 'object' === typeof value\r\n          && ATTRIBUTES in value\r\n          && CHILDREN in value\r\n          && KEY in value\r\n          && NAME in value\r\n          && 4 === Object.keys(value).length;\r\n  }\n\n  function x(name, attributes) {\r\n      var rest = [];\r\n      for (var _i = 2; _i < arguments.length; _i++) {\r\n          rest[_i - 2] = arguments[_i];\r\n      }\r\n      var children = [];\r\n      while (rest.length) {\r\n          var node = rest.pop();\r\n          if (node && Array.isArray(node)) {\r\n              rest = rest.concat(node);\r\n          }\r\n          else if (node != null && node !== true && node !== false) {\r\n              children.unshift(isVDOM(node) && node || createVDOM(true, node));\r\n          }\r\n      }\r\n      return createVDOM(false, name, attributes || {}, children);\r\n  }\n\n  function atto(view, element, oldNode) {\r\n      if (oldNode === void 0) { oldNode = null; }\r\n      var scheduled = false;\r\n      var attributes = oldNode && oldNode[ATTRIBUTES] || {};\r\n      var rootContext = attributes[CONTEXT] = {};\r\n      function mutate(context, actualContext, path) {\r\n          if (actualContext === void 0) { actualContext = rootContext; }\r\n          if (path === void 0) { path = null; }\r\n          if (context && context !== actualContext) {\r\n              if (context instanceof Promise) {\r\n                  context.then(function (newContext) { return mutate(newContext, actualContext, path); });\r\n              }\r\n              else if ('object' === typeof context) {\r\n                  if (null == path && 'string' === typeof actualContext) {\r\n                      path = actualContext;\r\n                      actualContext = rootContext;\r\n                  }\r\n                  var targetContext_1 = path ? (deepGet(actualContext, path) || {}) : actualContext;\r\n                  Object.entries(context).map(function (_a) {\r\n                      var k = _a[0], v = _a[1];\r\n                      return targetContext_1[k] = v;\r\n                  });\r\n                  if (path) {\r\n                      deepSet(actualContext, path, targetContext_1);\r\n                  }\r\n              }\r\n          }\r\n          scheduleRender();\r\n      }\r\n      function eventListener(event) {\r\n          var element = event.currentTarget;\r\n          element.context = element.context || {};\r\n          element.extra = element.extra || {};\r\n          var context = element.events[event.type](event, element.context, element.extra);\r\n          mutate(context, element.context);\r\n      }\r\n      function render() {\r\n          var lifecycle = [];\r\n          var node = resolveNode(x(view, attributes, oldNode && oldNode[CHILDREN]), x('div', {}, []));\r\n          element = patch(element.parentNode, element, oldNode, (oldNode = node), lifecycle, 'svg' === node.name, eventListener);\r\n          attributes[RECYCLE] = false;\r\n          while (lifecycle.length)\r\n              lifecycle.pop()();\r\n      }\r\n      function rendered() {\r\n          scheduled = false;\r\n      }\r\n      function renderedError(e) {\r\n          rendered();\r\n          throw e;\r\n      }\r\n      function scheduleRender() {\r\n          if (!scheduled) {\r\n              scheduled = true;\r\n              Promise.resolve().then(render).then(rendered, renderedError);\r\n          }\r\n      }\r\n      return mutate;\r\n  }\n\n  exports.atto = atto;\n  exports.x = x;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}