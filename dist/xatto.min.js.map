{"version":3,"sources":["dist/xatto.js"],"names":["global","factory","exports","module","define","amd","xatto","this","ATTRIBUTES","CHILDREN","CONTEXT","EXTRA","RECYCLE","SLICE","deepGet","target","key","separator","idx","indexOf","slice","deepSet","value","current","nexts","next","split","parseInt","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","resolveNode","node","parentNode","attributes","context","sliced","path","defaultValue","extra","name","updateAttribute","element","oldValue","isSVG","eventListener","events","addEventListener","removeEventListener","setAttribute","removeAttribute","getKey","removeElement","parent","done","removeChild","removeChildren","childNodes","ondestroy","cb","onremove","patch","oldNode","lifecycle","newElement","createElement","document","createTextNode","createElementNS","callback_1","oncreate","push","appendChild","name_1","insertBefore","nodeValue","oldAttributes","attrs","callback","onupdate","updateElement","oldKeyed","newKeyed","oldElements","oldChildren","children","i_1","oldKey","k","newKey","recycle","keyed","x","rest","_i","pop","Array","isArray","concat","unshift","atto","view","scheduled","rootContext","mutate","actualContext","Promise","then","newContext","targetContext_1","entries","map","_a","v","resolve","render","rendered","renderedError","event","currentTarget","type","e"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.xatto = {})));\n}(this, (function (exports) { 'use strict';\n\n  var ATTRIBUTES = 'attributes';\r\n  var CHILDREN = 'children';\n\n  var CONTEXT = 'xa-context';\r\n  var EXTRA = 'xa-extra';\r\n  var RECYCLE = 'xa-recycle';\r\n  var SLICE = 'xa-slice';\n\n  /**\r\n   * Get an item from an object using separator notation.\r\n   *\r\n   * @typeparam {T}\r\n   * @param {any} target\r\n   * @param {string} key\r\n   * @param {string} separator\r\n   * @return {T}\r\n   */\r\n  function deepGet(target, key, separator) {\r\n      if (separator === void 0) { separator = '.'; }\r\n      while (true) {\r\n          if (target == null) {\r\n              return target;\r\n          }\r\n          var idx = key.indexOf(separator);\r\n          if (idx < 0) {\r\n              return target[key];\r\n          }\r\n          target = target[key.slice(0, idx)];\r\n          key = key.slice(idx + 1);\r\n      }\r\n  }\n\n  /**\r\n   * Set an object item to a given value using separator notation.\r\n   *\r\n   * @param {any} target\r\n   * @param {string} key\r\n   * @param {any} value\r\n   * @param {string} separator\r\n   * @return {boolean}\r\n   */\r\n  function deepSet(target, key, value, separator) {\r\n      if (separator === void 0) { separator = '.'; }\r\n      while (true) {\r\n          if ('object' !== typeof target) {\r\n              return false;\r\n          }\r\n          var idx = key.indexOf(separator);\r\n          if (idx < 0) {\r\n              target[key] = value;\r\n              return true;\r\n          }\r\n          var current = key.slice(0, idx);\r\n          var nexts = key.slice(idx + 1);\r\n          if (null == target[current]) {\r\n              var next = nexts.split(separator, 1)[0];\r\n              target[current] = next === \"\" + parseInt(next, 10) ? [] : {};\r\n          }\r\n          target = target[current];\r\n          key = nexts;\r\n      }\r\n  }\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n  See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\r\n\r\n  var __assign = Object.assign || function __assign(t) {\r\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n          s = arguments[i];\r\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n      }\r\n      return t;\r\n  };\n\n  function resolveNode(node, parentNode) {\r\n      var attributes = node && node[ATTRIBUTES];\r\n      if (attributes) {\r\n          var context = attributes[CONTEXT]\r\n              || (parentNode && parentNode[ATTRIBUTES] && parentNode[ATTRIBUTES][CONTEXT])\r\n              || {};\r\n          var slice = attributes[SLICE];\r\n          var sliced = void 0;\r\n          if ('object' !== typeof slice) {\r\n              slice = [slice];\r\n          }\r\n          var path = slice[0];\r\n          if (path) {\r\n              sliced = deepGet(context, path);\r\n              if (!sliced) {\r\n                  var defaultValue = slice[1] || {};\r\n                  sliced = __assign({}, defaultValue);\r\n                  deepSet(context, path, sliced);\r\n              }\r\n              context = sliced;\r\n          }\r\n          var extra = __assign({}, (attributes[EXTRA] || {}), (parentNode && parentNode[ATTRIBUTES] && parentNode[ATTRIBUTES][EXTRA] || {}));\r\n          attributes[CONTEXT] = context;\r\n          attributes[EXTRA] = extra;\r\n      }\r\n      return (node && typeof node.name === \"function\")\r\n          ? resolveNode(node.name(node[ATTRIBUTES], node[CHILDREN]), node)\r\n          : node != null\r\n              ? node\r\n              : \"\";\r\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSVG, eventListener) {\r\n      if (name === \"key\" || 'object' === typeof value) {\r\n          // noop\r\n      }\r\n      else {\r\n          if (name[0] === \"o\" && name[1] === \"n\") {\r\n              if (!element.events) {\r\n                  element.events = {};\r\n              }\r\n              element.events[(name = name.slice(2))] = value;\r\n              if (value) {\r\n                  if (!oldValue) {\r\n                      element.addEventListener(name, eventListener);\r\n                  }\r\n              }\r\n              else {\r\n                  element.removeEventListener(name, eventListener);\r\n              }\r\n          }\r\n          else if (name in element && name !== \"list\" && !isSVG) {\r\n              element[name] = value == null ? \"\" : value;\r\n          }\r\n          else if (value != null && value !== false) {\r\n              element.setAttribute(name, value);\r\n          }\r\n          if (value == null || value === false) {\r\n              element.removeAttribute(name);\r\n          }\r\n      }\r\n  }\n\n  function createElement(node, lifecycle, isSVG, eventListener) {\r\n      var element = typeof node === \"string\" || typeof node === \"number\"\r\n          ? document.createTextNode(node)\r\n          : (isSVG = isSVG || node.name === \"svg\")\r\n              ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.name)\r\n              : document.createElement(node.name);\r\n      var attributes = node[ATTRIBUTES];\r\n      if (attributes) {\r\n          var callback_1 = attributes.oncreate;\r\n          if (callback_1) {\r\n              lifecycle.push(function () {\r\n                  callback_1(element, {}, attributes[CONTEXT], attributes[EXTRA]);\r\n              });\r\n          }\r\n          for (var i = 0; i < node[CHILDREN].length; i++) {\r\n              element.appendChild(createElement((node[CHILDREN][i] = resolveNode(node[CHILDREN][i], node)), lifecycle, isSVG, eventListener));\r\n          }\r\n          for (var name_1 in attributes) {\r\n              updateAttribute(element, name_1, attributes[name_1], null, isSVG, eventListener);\r\n          }\r\n          element.context = attributes[CONTEXT];\r\n          element.extra = attributes[EXTRA];\r\n      }\r\n      return element;\r\n  }\n\n  function getKey(node) {\r\n      return node ? node.key : null;\r\n  }\n\n  function removeChildren(element, node) {\r\n      var attributes = node[ATTRIBUTES];\r\n      if (attributes) {\r\n          for (var i = 0; i < node[CHILDREN].length; i++) {\r\n              removeChildren(element.childNodes[i], node[CHILDREN][i]);\r\n          }\r\n          if (attributes.ondestroy) {\r\n              attributes.ondestroy(element, attributes, attributes[CONTEXT], attributes[EXTRA]);\r\n          }\r\n      }\r\n      return element;\r\n  }\n\n  function removeElement(parent, element, node) {\r\n      function done() {\r\n          parent.removeChild(removeChildren(element, node));\r\n      }\r\n      var attributes = node[ATTRIBUTES] || {};\r\n      var cb = attributes.onremove;\r\n      if (cb) {\r\n          cb(element, done, attributes, attributes[CONTEXT], attributes[EXTRA]);\r\n      }\r\n      else {\r\n          done();\r\n      }\r\n  }\n\n  function updateElement(element, oldAttributes, attributes, lifecycle, isSVG, eventListener) {\r\n      var attrs = __assign({}, oldAttributes, attributes);\r\n      for (var name_1 in attrs) {\r\n          if (attributes[name_1] !==\r\n              (name_1 === \"value\" || name_1 === \"checked\"\r\n                  ? element[name_1]\r\n                  : oldAttributes[name_1])) {\r\n              updateAttribute(element, name_1, attributes[name_1], oldAttributes[name_1], isSVG, eventListener);\r\n          }\r\n      }\r\n      element.context = attributes[CONTEXT];\r\n      element.extra = attributes[EXTRA];\r\n      var callback = attributes[RECYCLE] ? attributes.oncreate : attributes.onupdate;\r\n      if (callback) {\r\n          lifecycle.push(function () {\r\n              callback(element, oldAttributes, attributes[CONTEXT], attributes[EXTRA]);\r\n          });\r\n      }\r\n  }\n\n  function patch(parent, element, oldNode, node, lifecycle, isSVG, eventListener) {\r\n      if (isSVG === void 0) { isSVG = false; }\r\n      if (node === oldNode) {\r\n          // noop\r\n      }\r\n      else if (oldNode == null || oldNode.name !== node.name) {\r\n          var newElement = createElement(node, lifecycle, isSVG, eventListener);\r\n          parent.insertBefore(newElement, element);\r\n          if (oldNode != null) {\r\n              removeElement(parent, element, oldNode);\r\n          }\r\n          element = newElement;\r\n      }\r\n      else if (oldNode.name == null) {\r\n          element.nodeValue = node;\r\n      }\r\n      else {\r\n          updateElement(element, oldNode[ATTRIBUTES], node[ATTRIBUTES], lifecycle, (isSVG = isSVG || node.name === \"svg\"), eventListener);\r\n          var oldKeyed = {};\r\n          var newKeyed = {};\r\n          var oldElements = [];\r\n          var oldChildren = oldNode[CHILDREN];\r\n          var children = node[CHILDREN];\r\n          for (var i_1 = 0; i_1 < oldChildren.length; i_1++) {\r\n              oldElements[i_1] = element.childNodes[i_1];\r\n              var oldKey = getKey(oldChildren[i_1]);\r\n              if (oldKey != null) {\r\n                  oldKeyed[oldKey] = [oldElements[i_1], oldChildren[i_1]];\r\n              }\r\n          }\r\n          var i = 0;\r\n          var k = 0;\r\n          while (k < children.length) {\r\n              var oldKey = getKey(oldChildren[i]);\r\n              var newKey = getKey(children[k] = resolveNode(children[k], node));\r\n              if (newKeyed[oldKey]) {\r\n                  i++;\r\n                  continue;\r\n              }\r\n              if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\r\n                  if (oldKey == null) {\r\n                      removeElement(element, oldElements[i], oldChildren[i]);\r\n                  }\r\n                  i++;\r\n                  continue;\r\n              }\r\n              var recycle = (children[k][ATTRIBUTES] || {})[RECYCLE];\r\n              if (newKey == null || true === recycle) {\r\n                  if (oldKey == null) {\r\n                      patch(element, oldElements[i], oldChildren[i], children[k], lifecycle, isSVG, eventListener);\r\n                      k++;\r\n                  }\r\n                  i++;\r\n              }\r\n              else {\r\n                  var keyed = oldKeyed[newKey] || [];\r\n                  if (oldKey === newKey) {\r\n                      patch(element, keyed[0], keyed[1], children[k], lifecycle, isSVG, eventListener);\r\n                      i++;\r\n                  }\r\n                  else if (keyed[0]) {\r\n                      patch(element, element.insertBefore(keyed[0], oldElements[i]), keyed[1], children[k], lifecycle, isSVG, eventListener);\r\n                  }\r\n                  else {\r\n                      patch(element, oldElements[i], null, children[k], lifecycle, isSVG, eventListener);\r\n                  }\r\n                  newKeyed[newKey] = children[k];\r\n                  k++;\r\n              }\r\n          }\r\n          while (i < oldChildren.length) {\r\n              if (getKey(oldChildren[i]) == null) {\r\n                  removeElement(element, oldElements[i], oldChildren[i]);\r\n              }\r\n              i++;\r\n          }\r\n          for (var key in oldKeyed) {\r\n              if (!newKeyed[key]) {\r\n                  removeElement(element, oldKeyed[key][0], oldKeyed[key][1]);\r\n              }\r\n          }\r\n      }\r\n      return element;\r\n  }\n\n  function x(name, attributes) {\r\n      var rest = [];\r\n      for (var _i = 2; _i < arguments.length; _i++) {\r\n          rest[_i - 2] = arguments[_i];\r\n      }\r\n      var children = [];\r\n      while (rest.length) {\r\n          var node = rest.pop();\r\n          if (node && Array.isArray(node)) {\r\n              rest = rest.concat(node);\r\n          }\r\n          else if (node != null && node !== true && node !== false) {\r\n              children.unshift(node);\r\n          }\r\n      }\r\n      return {\r\n          name: name,\r\n          attributes: attributes || {},\r\n          children: children,\r\n          key: attributes && attributes.key\r\n      };\r\n  }\n\n  function atto(view, element, oldNode) {\r\n      if (oldNode === void 0) { oldNode = null; }\r\n      var scheduled = false;\r\n      var attributes = oldNode && oldNode[ATTRIBUTES] || {};\r\n      var rootContext = attributes[CONTEXT] = {};\r\n      function mutate(context, actualContext, path) {\r\n          if (actualContext === void 0) { actualContext = rootContext; }\r\n          if (path === void 0) { path = null; }\r\n          if (context && context !== actualContext) {\r\n              if (context instanceof Promise) {\r\n                  context.then(function (newContext) { return mutate(newContext, actualContext, path); });\r\n              }\r\n              else if ('object' === typeof context) {\r\n                  if (null == path && 'string' === typeof actualContext) {\r\n                      path = actualContext;\r\n                      actualContext = rootContext;\r\n                  }\r\n                  var targetContext_1 = path ? (deepGet(actualContext, path) || {}) : actualContext;\r\n                  Object.entries(context).map(function (_a) {\r\n                      var k = _a[0], v = _a[1];\r\n                      return targetContext_1[k] = v;\r\n                  });\r\n                  if (path) {\r\n                      deepSet(actualContext, path, targetContext_1);\r\n                  }\r\n              }\r\n          }\r\n          scheduleRender();\r\n      }\r\n      function eventListener(event) {\r\n          var element = event.currentTarget;\r\n          element.context = element.context || {};\r\n          element.extra = element.extra || {};\r\n          var context = element.events[event.type](event, element.context, element.extra);\r\n          mutate(context, element.context);\r\n      }\r\n      function render() {\r\n          var lifecycle = [];\r\n          var node = resolveNode(x(view, attributes, oldNode && oldNode[CHILDREN]), x('div', {}, []));\r\n          element = patch(element.parentNode, element, oldNode, (oldNode = node), lifecycle, 'svg' === node.name, eventListener);\r\n          attributes[RECYCLE] = false;\r\n          while (lifecycle.length)\r\n              lifecycle.pop()();\r\n      }\r\n      function rendered() {\r\n          scheduled = false;\r\n      }\r\n      function renderedError(e) {\r\n          rendered();\r\n          throw e;\r\n      }\r\n      function scheduleRender() {\r\n          if (!scheduled) {\r\n              scheduled = true;\r\n              Promise.resolve().then(render).then(rendered, renderedError);\r\n          }\r\n      }\r\n      return mutate;\r\n  }\n\n  exports.atto = atto;\n  exports.x = x;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}