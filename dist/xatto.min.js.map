{"version":3,"sources":["dist/xatto.js"],"names":["global","factory","exports","module","define","amd","xatto","this","ATTRIBUTES","CHILDREN","getAttributes","element","getAttributeNames","reduce","acc","k","getAttribute","CONTEXT","EXTRA","RECYCLE","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","resolveNode","node","parentNode","attributes","context","extra","name","updateAttribute","value","oldValue","isSVG","eventListener","events","slice","addEventListener","removeEventListener","setAttribute","removeAttribute","getKey","key","removeElement","parent","done","removeChild","removeChildren","childNodes","ondestroy","cb","onremove","patch","oldNode","lifecycle","newElement","createElement","document","createTextNode","createElementNS","callback_1","oncreate","push","appendChild","name_1","insertBefore","nodeValue","oldAttributes","attrs","callback","onupdate","updateElement","oldKeyed","newKeyed","oldElements","oldChildren","children","i_1","oldKey","newKey","recycle","keyed","map","x","rest","_i","pop","Array","isArray","concat","unshift","atto","view","recycleElement","nodeName","toLowerCase","nodeType","scheduled","event","currentTarget","mutate","Promise","then","subscribe","entries","_a","v","scheduleRender","type","render","rendered","renderedError","e","resolve"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.xatto = {})));\n}(this, (function (exports) { 'use strict';\n\n  var ATTRIBUTES = 'attributes';\r\n  var CHILDREN = 'children';\n\n  function getAttributes(element) {\r\n      return element.getAttributeNames().reduce(function (acc, k) {\r\n          acc[k] = element.getAttribute(k);\r\n          return acc;\r\n      }, {});\r\n  }\n\n  var CONTEXT = 'xa-context';\r\n  var EXTRA = 'xa-extra';\r\n  var RECYCLE = 'xa-recycle';\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n  See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\r\n\r\n  var __assign = Object.assign || function __assign(t) {\r\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n          s = arguments[i];\r\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n      }\r\n      return t;\r\n  };\n\n  function resolveNode(node, parentNode) {\r\n      var attributes = node && node[ATTRIBUTES];\r\n      if (attributes) {\r\n          var context = attributes[CONTEXT]\r\n              || (parentNode && parentNode[ATTRIBUTES] && parentNode[ATTRIBUTES][CONTEXT])\r\n              || {};\r\n          var extra = __assign({}, (attributes[EXTRA] || {}), (parentNode && parentNode[ATTRIBUTES] && parentNode[ATTRIBUTES][EXTRA] || {}));\r\n          attributes[CONTEXT] = context;\r\n          attributes[EXTRA] = extra;\r\n      }\r\n      return (node && typeof node.name === \"function\")\r\n          ? resolveNode(node.name(node[ATTRIBUTES], node[CHILDREN]), node)\r\n          : node != null\r\n              ? node\r\n              : \"\";\r\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSVG, eventListener) {\r\n      if (name === \"key\" || 'object' === typeof value) {\r\n          // noop\r\n      }\r\n      else {\r\n          if (name[0] === \"o\" && name[1] === \"n\") {\r\n              if (!element.events) {\r\n                  element.events = {};\r\n              }\r\n              element.events[(name = name.slice(2))] = value;\r\n              if (value) {\r\n                  if (!oldValue) {\r\n                      element.addEventListener(name, eventListener);\r\n                  }\r\n              }\r\n              else {\r\n                  element.removeEventListener(name, eventListener);\r\n              }\r\n          }\r\n          else if (name in element && name !== \"list\" && !isSVG) {\r\n              element[name] = value == null ? \"\" : value;\r\n          }\r\n          else if (value != null && value !== false) {\r\n              element.setAttribute(name, value);\r\n          }\r\n          if (value == null || value === false) {\r\n              element.removeAttribute(name);\r\n          }\r\n      }\r\n  }\n\n  function createElement(node, lifecycle, isSVG, eventListener) {\r\n      var element = typeof node === \"string\" || typeof node === \"number\"\r\n          ? document.createTextNode(node)\r\n          : (isSVG = isSVG || node.name === \"svg\")\r\n              ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.name)\r\n              : document.createElement(node.name);\r\n      var attributes = node[ATTRIBUTES];\r\n      if (attributes) {\r\n          var callback_1 = attributes.oncreate;\r\n          if (callback_1) {\r\n              lifecycle.push(function () {\r\n                  callback_1(element, {}, attributes[CONTEXT], attributes[EXTRA]);\r\n              });\r\n          }\r\n          for (var i = 0; i < node[CHILDREN].length; i++) {\r\n              element.appendChild(createElement((node[CHILDREN][i] = resolveNode(node[CHILDREN][i], node)), lifecycle, isSVG, eventListener));\r\n          }\r\n          for (var name_1 in attributes) {\r\n              updateAttribute(element, name_1, attributes[name_1], null, isSVG, eventListener);\r\n          }\r\n          element.context = attributes[CONTEXT];\r\n          element.extra = attributes[EXTRA];\r\n      }\r\n      return element;\r\n  }\n\n  function getKey(node) {\r\n      return node ? node.key : null;\r\n  }\n\n  function removeChildren(element, node) {\r\n      var attributes = node[ATTRIBUTES];\r\n      if (attributes) {\r\n          for (var i = 0; i < node[CHILDREN].length; i++) {\r\n              removeChildren(element.childNodes[i], node[CHILDREN][i]);\r\n          }\r\n          if (attributes.ondestroy) {\r\n              attributes.ondestroy(element, attributes, attributes[CONTEXT], attributes[EXTRA]);\r\n          }\r\n      }\r\n      return element;\r\n  }\n\n  function removeElement(parent, element, node) {\r\n      function done() {\r\n          parent.removeChild(removeChildren(element, node));\r\n      }\r\n      var attributes = node[ATTRIBUTES] || {};\r\n      var cb = attributes.onremove;\r\n      if (cb) {\r\n          cb(element, done, attributes, attributes[CONTEXT], attributes[EXTRA]);\r\n      }\r\n      else {\r\n          done();\r\n      }\r\n  }\n\n  function updateElement(element, oldAttributes, attributes, lifecycle, isSVG, eventListener) {\r\n      var attrs = __assign({}, oldAttributes, attributes);\r\n      for (var name_1 in attrs) {\r\n          if (attributes[name_1] !==\r\n              (name_1 === \"value\" || name_1 === \"checked\"\r\n                  ? element[name_1]\r\n                  : oldAttributes[name_1])) {\r\n              updateAttribute(element, name_1, attributes[name_1], oldAttributes[name_1], isSVG, eventListener);\r\n          }\r\n      }\r\n      element.context = attributes[CONTEXT];\r\n      element.extra = attributes[EXTRA];\r\n      var callback = attributes[RECYCLE] ? attributes.oncreate : attributes.onupdate;\r\n      if (callback) {\r\n          lifecycle.push(function () {\r\n              callback(element, oldAttributes, attributes[CONTEXT], attributes[EXTRA]);\r\n          });\r\n      }\r\n  }\n\n  function patch(parent, element, oldNode, node, lifecycle, isSVG, eventListener) {\r\n      if (isSVG === void 0) { isSVG = false; }\r\n      if (node === oldNode) {\r\n          // noop\r\n      }\r\n      else if (oldNode == null || oldNode.name !== node.name) {\r\n          var newElement = createElement(node, lifecycle, isSVG, eventListener);\r\n          parent.insertBefore(newElement, element);\r\n          if (oldNode != null) {\r\n              removeElement(parent, element, oldNode);\r\n          }\r\n          element = newElement;\r\n      }\r\n      else if (oldNode.name == null) {\r\n          element.nodeValue = node;\r\n      }\r\n      else {\r\n          updateElement(element, oldNode[ATTRIBUTES], node[ATTRIBUTES], lifecycle, (isSVG = isSVG || node.name === \"svg\"), eventListener);\r\n          var oldKeyed = {};\r\n          var newKeyed = {};\r\n          var oldElements = [];\r\n          var oldChildren = oldNode[CHILDREN];\r\n          var children = node[CHILDREN];\r\n          for (var i_1 = 0; i_1 < oldChildren.length; i_1++) {\r\n              oldElements[i_1] = element.childNodes[i_1];\r\n              var oldKey = getKey(oldChildren[i_1]);\r\n              if (oldKey != null) {\r\n                  oldKeyed[oldKey] = [oldElements[i_1], oldChildren[i_1]];\r\n              }\r\n          }\r\n          var i = 0;\r\n          var k = 0;\r\n          while (k < children.length) {\r\n              var oldKey = getKey(oldChildren[i]);\r\n              var newKey = getKey(children[k] = resolveNode(children[k], node));\r\n              if (newKeyed[oldKey]) {\r\n                  i++;\r\n                  continue;\r\n              }\r\n              if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\r\n                  if (oldKey == null) {\r\n                      removeElement(element, oldElements[i], oldChildren[i]);\r\n                  }\r\n                  i++;\r\n                  continue;\r\n              }\r\n              var recycle = (children[k][ATTRIBUTES] || {})[RECYCLE];\r\n              if (newKey == null || true === recycle) {\r\n                  if (oldKey == null) {\r\n                      patch(element, oldElements[i], oldChildren[i], children[k], lifecycle, isSVG, eventListener);\r\n                      k++;\r\n                  }\r\n                  i++;\r\n              }\r\n              else {\r\n                  var keyed = oldKeyed[newKey] || [];\r\n                  if (oldKey === newKey) {\r\n                      patch(element, keyed[0], keyed[1], children[k], lifecycle, isSVG, eventListener);\r\n                      i++;\r\n                  }\r\n                  else if (keyed[0]) {\r\n                      patch(element, element.insertBefore(keyed[0], oldElements[i]), keyed[1], children[k], lifecycle, isSVG, eventListener);\r\n                  }\r\n                  else {\r\n                      patch(element, oldElements[i], null, children[k], lifecycle, isSVG, eventListener);\r\n                  }\r\n                  newKeyed[newKey] = children[k];\r\n                  k++;\r\n              }\r\n          }\r\n          while (i < oldChildren.length) {\r\n              if (getKey(oldChildren[i]) == null) {\r\n                  removeElement(element, oldElements[i], oldChildren[i]);\r\n              }\r\n              i++;\r\n          }\r\n          for (var key in oldKeyed) {\r\n              if (!newKeyed[key]) {\r\n                  removeElement(element, oldKeyed[key][0], oldKeyed[key][1]);\r\n              }\r\n          }\r\n      }\r\n      return element;\r\n  }\n\n  var map = [].map;\r\n  function recycleElement(element) {\r\n      var attributes = getAttributes(element);\r\n      attributes[RECYCLE] = true;\r\n      return {\r\n          nodeName: element.nodeName.toLowerCase(),\r\n          attributes: attributes,\r\n          children: map.call(element.childNodes, function (element) { return element.nodeType === 3 // Node.TEXT_NODE\r\n              ? element.nodeValue\r\n              : recycleElement(element); })\r\n      };\r\n  }\n\n  function x(name, attributes) {\r\n      var rest = [];\r\n      for (var _i = 2; _i < arguments.length; _i++) {\r\n          rest[_i - 2] = arguments[_i];\r\n      }\r\n      var children = [];\r\n      while (rest.length) {\r\n          var node = rest.pop();\r\n          if (node && Array.isArray(node)) {\r\n              rest = rest.concat(node);\r\n          }\r\n          else if (node != null && node !== true && node !== false) {\r\n              children.unshift(node);\r\n          }\r\n      }\r\n      return {\r\n          name: name,\r\n          attributes: attributes || {},\r\n          children: children,\r\n          key: attributes && attributes.key\r\n      };\r\n  }\n\n  function atto(view, element) {\r\n      var oldNode = recycleElement(element);\r\n      var scheduled = false;\r\n      var attributes = getAttributes(element);\r\n      function eventListener(event) {\r\n          var element = event.currentTarget;\r\n          mutate(element.events[event.type](event, element.context || {}, element.extra || {}));\r\n          function mutate(context) {\r\n              if (context && context !== element.context) {\r\n                  if (context instanceof Promise) {\r\n                      context.then(mutate);\r\n                  }\r\n                  else if ('function' === typeof context.subscribe) {\r\n                      context.subscribe(mutate); // @todo unsubscribe\r\n                  }\r\n                  else if ('object' === typeof context) {\r\n                      Object.entries(context).map(function (_a) {\r\n                          var k = _a[0], v = _a[1];\r\n                          return element.context[k] = v;\r\n                      });\r\n                      scheduleRender();\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      function render() {\r\n          var lifecycle = [];\r\n          var node = resolveNode(x(view, attributes, oldNode[CHILDREN]), x('div', {}, []));\r\n          element = patch(element.parentNode, element, oldNode, (oldNode = node), lifecycle, 'svg' === node.name, eventListener);\r\n          while (lifecycle.length)\r\n              lifecycle.pop()();\r\n      }\r\n      function rendered() {\r\n          scheduled = false;\r\n      }\r\n      function renderedError(e) {\r\n          rendered();\r\n          throw e;\r\n      }\r\n      function scheduleRender() {\r\n          if (!scheduled) {\r\n              scheduled = true;\r\n              Promise.resolve().then(render).then(rendered, renderedError);\r\n          }\r\n      }\r\n      return scheduleRender;\r\n  }\n\n  exports.atto = atto;\n  exports.x = x;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}