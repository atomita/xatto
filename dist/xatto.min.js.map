{"version":3,"sources":["dist/xatto.js"],"names":["global","factory","exports","module","define","amd","xatto","this","ATTRIBUTES","CHILDREN","XA_CONTEXT","XA_EXTRA","XA_RECYCLE","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","resolveNode","node","parentNode","context","extra","name","updateAttribute","element","value","oldValue","isSVG","eventListener","events","slice","addEventListener","removeEventListener","setAttribute","removeAttribute","getKey","key","removeElement","parent","done","removeChild","removeChildren","attributes","childNodes","ondestroy","cb","onremove","patch","oldNode","lifecycle","newElement","createElement","document","createTextNode","createElementNS","callback_1","oncreate","push","appendChild","name_1","insertBefore","nodeValue","oldAttributes","attrs","callback","onupdate","updateElement","oldKeyed","newKeyed","oldElements","oldChildren","children","i_1","oldKey","k","newKey","recycle","keyed","map","atto","recycleElement","getAttributeNames","reduce","acc","getAttribute","nodeName","toLowerCase","nodeType","scheduled","event","currentTarget","mutate","Promise","then","subscribe","entries","_a","v","scheduleRender","type","render","pop","rendered","renderedError","e","resolve","x","rest","_i","Array","isArray","concat","unshift"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.xatto = {})));\n}(this, (function (exports) { 'use strict';\n\n    var ATTRIBUTES = 'attributes';\r\n    var CHILDREN = 'children';\r\n    var XA_CONTEXT = 'xa-context';\r\n    var XA_EXTRA = 'xa-extra';\r\n    var XA_RECYCLE = 'xa-recycle';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\n\n    function resolveNode(node, parentNode) {\r\n        if ('string' === typeof node) {\r\n            return node;\r\n        }\r\n        var context = node[ATTRIBUTES][XA_CONTEXT]\r\n            || parentNode[ATTRIBUTES][XA_CONTEXT]\r\n            || {};\r\n        var extra = __assign({}, (node[ATTRIBUTES][XA_EXTRA] || {}), (parentNode[ATTRIBUTES][XA_EXTRA] || {}));\r\n        node[ATTRIBUTES][XA_CONTEXT] = context;\r\n        node[ATTRIBUTES][XA_EXTRA] = extra;\r\n        return typeof node.name === \"function\"\r\n            ? resolveNode(node.name(node[ATTRIBUTES], node[CHILDREN]), node)\r\n            : node != null\r\n                ? node\r\n                : \"\";\r\n    }\n\n    function updateAttribute(element, name, value, oldValue, isSVG, eventListener) {\r\n        if (name === \"key\" || 'object' === typeof value) {\r\n            // noop\r\n        }\r\n        else {\r\n            if (name[0] === \"o\" && name[1] === \"n\") {\r\n                if (!element.events) {\r\n                    element.events = {};\r\n                }\r\n                element.events[(name = name.slice(2))] = value;\r\n                if (value) {\r\n                    if (!oldValue) {\r\n                        element.addEventListener(name, eventListener);\r\n                    }\r\n                }\r\n                else {\r\n                    element.removeEventListener(name, eventListener);\r\n                }\r\n            }\r\n            else if (name in element && name !== \"list\" && !isSVG) {\r\n                element[name] = value == null ? \"\" : value;\r\n            }\r\n            else if (value != null && value !== false) {\r\n                element.setAttribute(name, value);\r\n            }\r\n            if (value == null || value === false) {\r\n                element.removeAttribute(name);\r\n            }\r\n        }\r\n    }\n\n    function createElement(node, lifecycle, isSVG, eventListener) {\r\n        var element = typeof node === \"string\" || typeof node === \"number\"\r\n            ? document.createTextNode(node)\r\n            : (isSVG = isSVG || node.name === \"svg\")\r\n                ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.name)\r\n                : document.createElement(node.name);\r\n        var attributes = node[ATTRIBUTES];\r\n        if (attributes) {\r\n            var callback_1 = attributes.oncreate;\r\n            if (callback_1) {\r\n                lifecycle.push(function () {\r\n                    callback_1(element);\r\n                });\r\n            }\r\n            for (var i = 0; i < node[CHILDREN].length; i++) {\r\n                element.appendChild(createElement((node[CHILDREN][i] = resolveNode(node[CHILDREN][i], node)), lifecycle, isSVG, eventListener));\r\n            }\r\n            for (var name_1 in attributes) {\r\n                updateAttribute(element, name_1, attributes[name_1], null, isSVG, eventListener);\r\n            }\r\n            element.context = attributes[XA_CONTEXT];\r\n            element.extra = attributes[XA_EXTRA];\r\n        }\r\n        return element;\r\n    }\n\n    function getKey(node) {\r\n        return node ? node.key : null;\r\n    }\n\n    function removeChildren(element, node) {\r\n        var attributes = node[ATTRIBUTES];\r\n        if (attributes) {\r\n            for (var i = 0; i < node[CHILDREN].length; i++) {\r\n                removeChildren(element.childNodes[i], node[CHILDREN][i]);\r\n            }\r\n            if (attributes.ondestroy) {\r\n                attributes.ondestroy(element);\r\n            }\r\n        }\r\n        return element;\r\n    }\n\n    function removeElement(parent, element, node) {\r\n        function done() {\r\n            parent.removeChild(removeChildren(element, node));\r\n        }\r\n        var cb = node[ATTRIBUTES] && node[ATTRIBUTES].onremove;\r\n        if (cb) {\r\n            cb(element, done);\r\n        }\r\n        else {\r\n            done();\r\n        }\r\n    }\n\n    function updateElement(element, oldAttributes, attributes, lifecycle, isSVG, eventListener) {\r\n        var attrs = __assign({}, oldAttributes, attributes);\r\n        for (var name_1 in attrs) {\r\n            if (attributes[name_1] !==\r\n                (name_1 === \"value\" || name_1 === \"checked\"\r\n                    ? element[name_1]\r\n                    : oldAttributes[name_1])) {\r\n                updateAttribute(element, name_1, attributes[name_1], oldAttributes[name_1], isSVG, eventListener);\r\n            }\r\n        }\r\n        element.context = attributes[XA_CONTEXT];\r\n        element.extra = attributes[XA_EXTRA];\r\n        var callback = attributes[XA_RECYCLE] ? attributes.oncreate : attributes.onupdate;\r\n        if (callback) {\r\n            lifecycle.push(function () {\r\n                callback(element, oldAttributes);\r\n            });\r\n        }\r\n    }\n\n    function patch(parent, element, oldNode, node, lifecycle, isSVG, eventListener) {\r\n        if (isSVG === void 0) { isSVG = false; }\r\n        if (node === oldNode) {\r\n            // noop\r\n        }\r\n        else if (oldNode == null || oldNode.name !== node.name) {\r\n            var newElement = createElement(node, lifecycle, isSVG, eventListener);\r\n            parent.insertBefore(newElement, element);\r\n            if (oldNode != null) {\r\n                removeElement(parent, element, oldNode);\r\n            }\r\n            element = newElement;\r\n        }\r\n        else if (oldNode.name == null) {\r\n            element.nodeValue = node;\r\n        }\r\n        else {\r\n            updateElement(element, oldNode[ATTRIBUTES], node[ATTRIBUTES], lifecycle, (isSVG = isSVG || node.name === \"svg\"), eventListener);\r\n            var oldKeyed = {};\r\n            var newKeyed = {};\r\n            var oldElements = [];\r\n            var oldChildren = oldNode[CHILDREN];\r\n            var children = node[CHILDREN];\r\n            for (var i_1 = 0; i_1 < oldChildren.length; i_1++) {\r\n                oldElements[i_1] = element.childNodes[i_1];\r\n                var oldKey = getKey(oldChildren[i_1]);\r\n                if (oldKey != null) {\r\n                    oldKeyed[oldKey] = [oldElements[i_1], oldChildren[i_1]];\r\n                }\r\n            }\r\n            var i = 0;\r\n            var k = 0;\r\n            while (k < children.length) {\r\n                var oldKey = getKey(oldChildren[i]);\r\n                var newKey = getKey(children[k] = resolveNode(children[k], node));\r\n                if (newKeyed[oldKey]) {\r\n                    i++;\r\n                    continue;\r\n                }\r\n                if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\r\n                    if (oldKey == null) {\r\n                        removeElement(element, oldElements[i], oldChildren[i]);\r\n                    }\r\n                    i++;\r\n                    continue;\r\n                }\r\n                var recycle = (children[k][ATTRIBUTES] || {})[XA_RECYCLE];\r\n                if (newKey == null || true === recycle) {\r\n                    if (oldKey == null) {\r\n                        patch(element, oldElements[i], oldChildren[i], children[k], lifecycle, isSVG, eventListener);\r\n                        k++;\r\n                    }\r\n                    i++;\r\n                }\r\n                else {\r\n                    var keyed = oldKeyed[newKey] || [];\r\n                    if (oldKey === newKey) {\r\n                        patch(element, keyed[0], keyed[1], children[k], lifecycle, isSVG, eventListener);\r\n                        i++;\r\n                    }\r\n                    else if (keyed[0]) {\r\n                        patch(element, element.insertBefore(keyed[0], oldElements[i]), keyed[1], children[k], lifecycle, isSVG, eventListener);\r\n                    }\r\n                    else {\r\n                        patch(element, oldElements[i], null, children[k], lifecycle, isSVG, eventListener);\r\n                    }\r\n                    newKeyed[newKey] = children[k];\r\n                    k++;\r\n                }\r\n            }\r\n            while (i < oldChildren.length) {\r\n                if (getKey(oldChildren[i]) == null) {\r\n                    removeElement(element, oldElements[i], oldChildren[i]);\r\n                }\r\n                i++;\r\n            }\r\n            for (var key in oldKeyed) {\r\n                if (!newKeyed[key]) {\r\n                    removeElement(element, oldKeyed[key][0], oldKeyed[key][1]);\r\n                }\r\n            }\r\n        }\r\n        return element;\r\n    }\n\n    function getAttributes(element) {\r\n        return element.getAttributeNames().reduce(function (acc, k) {\r\n            acc[k] = element.getAttribute(k);\r\n            return acc;\r\n        }, {});\r\n    }\n\n    var map = [].map;\r\n    function recycleElement(element) {\r\n        var attributes = getAttributes(element);\r\n        attributes[XA_RECYCLE] = true;\r\n        return {\r\n            nodeName: element.nodeName.toLowerCase(),\r\n            attributes: attributes,\r\n            children: map.call(element.childNodes, function (element) { return element.nodeType === 3 // Node.TEXT_NODE\r\n                ? element.nodeValue\r\n                : recycleElement(element); })\r\n        };\r\n    }\n\n    function atto(node, element) {\r\n        var oldNode = recycleElement(element);\r\n        var scheduled = false;\r\n        function eventListener(event) {\r\n            var element = event.currentTarget;\r\n            mutate(element.events[event.type](event, element.context || {}, element.extra || {}));\r\n            function mutate(context) {\r\n                if (context && context !== element.context) {\r\n                    if (context instanceof Promise) {\r\n                        context.then(mutate);\r\n                    }\r\n                    else if ('function' === typeof context.subscribe) {\r\n                        context.subscribe(mutate); // @todo unsubscribe\r\n                    }\r\n                    else if ('object' === typeof context) {\r\n                        Object.entries(context).map(function (_a) {\r\n                            var k = _a[0], v = _a[1];\r\n                            return element.context[k] = v;\r\n                        });\r\n                        scheduleRender();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        function render() {\r\n            var lifecycle = [];\r\n            element = patch(element.parentNode, element, oldNode, (oldNode = node), lifecycle, 'svg' === node.name, eventListener);\r\n            while (lifecycle.length)\r\n                lifecycle.pop()();\r\n        }\r\n        function rendered() {\r\n            scheduled = false;\r\n        }\r\n        function renderedError(e) {\r\n            rendered();\r\n            throw e;\r\n        }\r\n        function scheduleRender() {\r\n            if (!scheduled) {\r\n                scheduled = true;\r\n                Promise.resolve().then(render).then(rendered, renderedError);\r\n            }\r\n        }\r\n        return scheduleRender;\r\n    }\n\n    function x(name, attributes) {\r\n        var rest = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            rest[_i - 2] = arguments[_i];\r\n        }\r\n        var children = [];\r\n        while (rest.length) {\r\n            var node = rest.pop();\r\n            if (node && Array.isArray(node)) {\r\n                rest = rest.concat(node);\r\n            }\r\n            else if (node != null && node !== true && node !== false) {\r\n                children.unshift(node);\r\n            }\r\n        }\r\n        return {\r\n            name: name,\r\n            attributes: attributes || {},\r\n            children: children,\r\n            key: attributes && attributes.key\r\n        };\r\n    }\n\n    exports.atto = atto;\n    exports.x = x;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}