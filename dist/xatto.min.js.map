{"version":3,"sources":["dist/xatto.js"],"names":["global","factory","exports","module","define","amd","xatto","this","CONTEXT","EXTRA","FILL","PATH","SLICE","TEXT","MIDDLEWARES","CHILDREN","KEY","NAME","PROPS","assign","target","source","key","hasOwnProperty","ELEMENT","LIFECYCLE","PREV_PROPS","PREV","CREATE","DESTROY","REMOVE","REMOVING","UPDATE","deepSet","value","separator","idx","indexOf","current","slice","nexts","next","split","parseInt","createGlueNode","vNode","newGlueNode","i","map","child","TEXT_NODE","createVNode","mayBeTextNode","name","props","children","node","deepGet","remodelProps","context","extra","path","partial","fn","args","backwardArgs","_i","arguments","length","concat","apply","XLINK_NS","updateAttribute","element","oldValue","isSVG","eventProxy","elementProps","eventName","removeEventListener","addEventListener","nullOrFalse","removeAttribute","ns","originName","replace","setAttribute","setAttributeNS","removeAttributeNS","patch","mutate","destroys","lifecycleEvents","recursion","glueNode","isDestroy","_a","lifecycleEvent","lifecycle","detail","document","createTextNode","createElementNS","createElement","name_1","set","prevProps","updated","nodeValue","updateElement","push","parentElement","removeChild","done","Promise","resolve","then","Element","elm","option","event","CustomEvent","dispatchEvent","provideFireLifeCycleEvent","toLowerCase","reduce","acc","childNode","patchedChild","v","reduceRight","ref","insertBefore","isVNode","Object","keys","x","rest","pop","Array","isArray","unshift","resolveChildren","rootContext","parentNode","childs","resolveNode","rawProps","parentProps","parentPath","sliced","resolved","lifeCycleEventPath","rendering","view","renderers","rootProps","resolver","wrapOnion","noop","patcher","finallyer","mergeGlueNode","indexedPrevChildren","prevChild","_prevChild","splice","_","undefined","index","stack","atto","elementOrGlueNode","options","scheduled","nodeName","WeakMap","middlewares","rendererProviders","destroy","provider","newContext","targetContext","getTargetContext","render","rendered","renderedError","def","currentTarget","get","type","e","currentOnlyEventHandler","eventHandler"],"mappings":"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","sourcesContent":["/*\nxatto v0.1.16\nhttps://github.com/atomita/xatto\nReleased under the MIT License.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.xatto = {})));\n}(this, (function (exports) { 'use strict';\n\n  var CONTEXT = 'xa.context';\r\n  var EXTRA = 'xa.extra';\r\n  var FILL = 'xa.fill';\r\n  var PATH = 'xa.path';\r\n  var SLICE = 'xa.slice';\r\n  var TEXT = 'xa.text';\n\n  var MIDDLEWARES = 'middlewares';\n\n  var CHILDREN = 'children';\r\n  var KEY = 'key';\r\n  var NAME = 'name';\r\n  var PROPS = 'props';\n\n  function assign(target, source) {\r\n      for (var key in source) {\r\n          if (source.hasOwnProperty(key)) {\r\n              target[key] = source[key];\r\n          }\r\n      }\r\n      return target;\r\n  }\n\n  var ELEMENT = 'element';\r\n  var LIFECYCLE = 'lifecycle';\r\n  var PREV = 'prev';\r\n  var PREV_PROPS = PREV + \".\" + PROPS;\n\n  var CREATE = 'create';\r\n  var DESTROY = 'destroy';\r\n  var REMOVE = 'remove';\r\n  var REMOVING = 'removing';\r\n  var UPDATE = 'update';\n\n  /**\r\n   * Set an object item to a given value using separator notation.\r\n   *\r\n   * @param {any} target\r\n   * @param {string} key\r\n   * @param {any} value\r\n   * @param {string} separator\r\n   * @return {boolean}\r\n   */\r\n  function deepSet(target, key, value, separator) {\r\n      if (separator === void 0) { separator = '.'; }\r\n      while (true) {\r\n          if ('object' !== typeof target) {\r\n              return false;\r\n          }\r\n          var idx = key.indexOf(separator);\r\n          if (idx < 0) {\r\n              target[key] = value;\r\n              return true;\r\n          }\r\n          var current = key.slice(0, idx);\r\n          var nexts = key.slice(idx + 1);\r\n          if (null == target[current]) {\r\n              var next = nexts.split(separator, 1)[0];\r\n              target[current] = next === \"\" + parseInt(next, 10) ? [] : {};\r\n          }\r\n          target = target[current];\r\n          key = nexts;\r\n      }\r\n  }\n\n  function createGlueNode(vNode) {\r\n      var newGlueNode = assign({}, vNode);\r\n      newGlueNode.i = 0;\r\n      newGlueNode[LIFECYCLE] = CREATE;\r\n      newGlueNode[CHILDREN] = vNode[CHILDREN].map(function (child) { return createGlueNode(child); });\r\n      deepSet(newGlueNode, PREV_PROPS, {});\r\n      return newGlueNode;\r\n  }\n\n  var TEXT_NODE = 'xa-txt';\n\n  function createVNode(mayBeTextNode, name, props, children) {\r\n      if (props === void 0) { props = {}; }\r\n      if (children === void 0) { children = []; }\r\n      var node = {};\r\n      node[NAME] = name;\r\n      node[PROPS] = props;\r\n      node[CHILDREN] = children;\r\n      node[KEY] = props.key;\r\n      if (mayBeTextNode && 'function' !== typeof name) {\r\n          node[NAME] = TEXT_NODE;\r\n          deepSet(node[PROPS], TEXT, name);\r\n      }\r\n      return node;\r\n  }\n\n  function createGlueNodeByElement(element) {\r\n      var node = createGlueNode(createVNode(false, element.nodeName));\r\n      node[ELEMENT] = element;\r\n      return node;\r\n  }\n\n  /**\r\n   * Get an item from an object using separator notation.\r\n   *\r\n   * @typeparam {T}\r\n   * @param {any} target\r\n   * @param {string} key\r\n   * @param {string} separator\r\n   * @return {T}\r\n   */\r\n  function deepGet(target, key, separator) {\r\n      if (separator === void 0) { separator = '.'; }\r\n      while (true) {\r\n          if (target == null) {\r\n              return target;\r\n          }\r\n          var idx = key.indexOf(separator);\r\n          if (idx < 0) {\r\n              return target[key];\r\n          }\r\n          target = target[key.slice(0, idx)];\r\n          key = key.slice(idx + 1);\r\n      }\r\n  }\n\n  function remodelProps(props, context, extra, path) {\r\n      deepSet(props, CONTEXT, context || deepGet(props, CONTEXT) || {});\r\n      deepSet(props, EXTRA, extra || deepGet(props, EXTRA) || {});\r\n      deepSet(props, PATH, path || '');\r\n      return props;\r\n  }\n\n  function apply(fn, args) {\r\n      return fn.apply(null, args);\r\n  }\n\n  function partial(fn, args) {\r\n      return function () {\r\n          var backwardArgs = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              backwardArgs[_i] = arguments[_i];\r\n          }\r\n          return apply(fn, args.concat(backwardArgs));\r\n      };\r\n  }\n\n  var XLINK_NS = \"http://www.w3.org/1999/xlink\";\n\n  function updateAttribute(element, name, value, oldValue, isSVG, eventProxy, elementProps) {\r\n      if (name === \"key\" || 'object' === typeof value) {\r\n          // noop\r\n      }\r\n      else {\r\n          if (name[0] === \"o\" && name[1] === \"n\") {\r\n              var eventName = name.slice(2);\r\n              if (value == null) {\r\n                  element.removeEventListener(eventName, eventProxy);\r\n              }\r\n              else if (oldValue == null) {\r\n                  element.addEventListener(eventName, eventProxy);\r\n              }\r\n          }\r\n          else {\r\n              var nullOrFalse = value == null || value === false;\r\n              if (name in element &&\r\n                  name !== \"list\" &&\r\n                  name !== \"draggable\" &&\r\n                  name !== \"spellcheck\" &&\r\n                  name !== \"translate\" &&\r\n                  !isSVG) {\r\n                  if (nullOrFalse) {\r\n                      element.removeAttribute(name);\r\n                  }\r\n                  else {\r\n                      element[name] = value == null ? \"\" : value;\r\n                  }\r\n              }\r\n              else {\r\n                  var ns = false;\r\n                  if (isSVG) {\r\n                      var originName = name;\r\n                      name = name.replace(/^xlink:?/, \"\");\r\n                      ns = name !== originName;\r\n                  }\r\n                  switch ((nullOrFalse ? 1 : 0) + ((ns ? 1 : 0) << 1)) {\r\n                      case 0:\r\n                          element.setAttribute(name, value);\r\n                          break;\r\n                      case 1:\r\n                          element.removeAttribute(name);\r\n                          break;\r\n                      case 2:\r\n                          element.setAttributeNS(XLINK_NS, name, value);\r\n                          break;\r\n                      case 3:\r\n                          element.removeAttributeNS(XLINK_NS, name);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  }\n\n  function createElement(node, isSVG, eventProxy, elementProps) {\r\n      var props = node[PROPS] || {};\r\n      if (node[NAME] === TEXT_NODE) {\r\n          return document.createTextNode(deepGet(props, TEXT));\r\n      }\r\n      var element = (isSVG = isSVG || node[NAME] === \"svg\")\r\n          ? document.createElementNS(\"http://www.w3.org/2000/svg\", node[NAME])\r\n          : document.createElement(node[NAME]);\r\n      for (var name_1 in props) {\r\n          updateAttribute(element, name_1, props[name_1], null, isSVG, eventProxy, elementProps);\r\n      }\r\n      elementProps.set(element, props);\r\n      return element;\r\n  }\n\n  function provideFireLifeCycleEvent(elm, eventName, option) {\r\n      if (option === void 0) { option = {}; }\r\n      var event = new CustomEvent(eventName, option);\r\n      return function () { return elm.dispatchEvent(event); };\r\n  }\n\n  function updateElement(node, isSVG, eventProxy, elementProps) {\r\n      var element = node[ELEMENT];\r\n      var props = node[PROPS];\r\n      var prevProps = deepGet(node, PREV_PROPS) || {};\r\n      var updated = false;\r\n      if (node[NAME] === TEXT_NODE) {\r\n          var value = deepGet(props, TEXT);\r\n          var oldValue = deepGet(prevProps, TEXT);\r\n          updated = value != oldValue;\r\n          if (updated) {\r\n              element.nodeValue = deepGet(props, TEXT);\r\n          }\r\n          return [element, updated];\r\n      }\r\n      for (var name_1 in props) {\r\n          if (props[name_1] !==\r\n              (name_1 === \"value\" || name_1 === \"checked\"\r\n                  ? element[name_1]\r\n                  : prevProps[name_1])) {\r\n              updateAttribute(element, name_1, props[name_1], prevProps[name_1], isSVG, eventProxy, elementProps);\r\n              updated = true;\r\n          }\r\n      }\r\n      elementProps.set(element, props);\r\n      return [element, updated];\r\n  }\n\n  function patch(mutate, destroys, lifecycleEvents, next, recursion, glueNode, isSVG, eventProxy, elementProps, isDestroy) {\r\n      var _a;\r\n      var element = glueNode[ELEMENT];\r\n      if (!isSVG && glueNode[NAME] === 'svg') {\r\n          isSVG = true;\r\n      }\r\n      if (!isDestroy && glueNode[LIFECYCLE] === DESTROY) {\r\n          isDestroy = true;\r\n      }\r\n      var lifecycle = isDestroy ? DESTROY : glueNode[LIFECYCLE];\r\n      var lifecycleEvent;\r\n      var detail = null;\r\n      switch (lifecycle) {\r\n          case CREATE:\r\n              element = createElement(glueNode, isSVG, eventProxy, elementProps);\r\n              break;\r\n          case UPDATE:\r\n              _a = updateElement(glueNode, isSVG, eventProxy, elementProps), element = _a[0], lifecycleEvent = _a[1];\r\n              break;\r\n          case DESTROY:\r\n              if (glueNode[LIFECYCLE] === DESTROY) {\r\n                  destroys.push(function () { return element.parentElement.removeChild(element); });\r\n              }\r\n              break;\r\n          case REMOVE:\r\n              glueNode[LIFECYCLE] = REMOVING;\r\n              detail = {\r\n                  done: function () {\r\n                      glueNode[LIFECYCLE] = DESTROY;\r\n                      Promise.resolve({}).then(mutate);\r\n                  }\r\n              };\r\n      }\r\n      switch (lifecycle) {\r\n          case CREATE:\r\n          case DESTROY:\r\n          case REMOVE:\r\n              lifecycleEvent = true;\r\n      }\r\n      if (lifecycleEvent && element instanceof Element) {\r\n          lifecycleEvents.push(provideFireLifeCycleEvent(element, lifecycle.toLowerCase(), { detail: detail }));\r\n      }\r\n      var children = glueNode[CHILDREN].reduce(function (acc, childNode) {\r\n          var patchedChild = recursion(childNode, isSVG, eventProxy, elementProps, isDestroy);\r\n          return patchedChild ? acc.concat(patchedChild) : acc;\r\n      }, []);\r\n      if (lifecycle === DESTROY) {\r\n          return null;\r\n      }\r\n      children.map(function (v) { return v.element; }).reduceRight(function (ref, elm) {\r\n          element.insertBefore(elm, ref);\r\n          return elm;\r\n      }, null);\r\n      glueNode[CHILDREN] = children;\r\n      glueNode[ELEMENT] = element;\r\n      return glueNode;\r\n  }\n\n  function isVNode(value) {\r\n      return null != value\r\n          && 'object' === typeof value\r\n          && PROPS in value\r\n          && CHILDREN in value\r\n          && KEY in value\r\n          && NAME in value\r\n          && 4 === Object.keys(value).length;\r\n  }\n\n  function x(name, props) {\r\n      var rest = [];\r\n      for (var _i = 2; _i < arguments.length; _i++) {\r\n          rest[_i - 2] = arguments[_i];\r\n      }\r\n      var children = [];\r\n      while (rest.length) {\r\n          var node = rest.pop();\r\n          if (node && Array.isArray(node)) {\r\n              rest = rest.concat(node);\r\n          }\r\n          else if (node != null && node !== true && node !== false) {\r\n              children.unshift(isVNode(node) && node || createVNode(true, node));\r\n          }\r\n      }\r\n      return createVNode(false, name, props || {}, children);\r\n  }\n\n  function resolveChildren(next, recursion, rootContext, children, parentNode) {\r\n      return children.reduce(function (childs, child) {\r\n          childs.push.apply(childs, recursion(rootContext, child, parentNode));\r\n          return childs;\r\n      }, []);\r\n  }\r\n  function resolveNode(next, recursion, rootContext, node, parentNode) {\r\n      if (!node) {\r\n          return [];\r\n      }\r\n      if (x === node.name) { // Fragment\r\n          return resolveChildren(next, recursion, rootContext, node[CHILDREN], parentNode);\r\n      }\r\n      var rawProps = node[PROPS];\r\n      var parentProps = parentNode && parentNode[PROPS] || {};\r\n      var path = deepGet(rawProps, PATH);\r\n      if (!path) {\r\n          var parentPath = deepGet(parentProps, PATH) || '';\r\n          var slice = deepGet(rawProps, SLICE);\r\n          path = (parentPath && slice)\r\n              ? parentPath + \".\" + slice\r\n              : (slice || parentPath);\r\n      }\r\n      var sliced = path ? deepGet(rootContext, path) : rootContext;\r\n      if (!sliced) {\r\n          var fill = deepGet(rawProps, FILL) || {};\r\n          sliced = assign({}, fill);\r\n          deepSet(rootContext, path, sliced);\r\n      }\r\n      var context = sliced;\r\n      var extra = assign(assign({}, deepGet(rawProps, EXTRA) || {}), parentNode && deepGet(parentNode, PROPS + \".\" + EXTRA) || {});\r\n      var props = remodelProps(rawProps, context, extra, path);\r\n      var resolveds = (typeof node.name === \"function\"\r\n          ? recursion(rootContext, node.name(props, node[CHILDREN]), node)\r\n          : [node]).reduce(function (acc, resolved) {\r\n          if (isVNode(resolved)) {\r\n              resolved[CHILDREN] = resolveChildren(next, recursion, rootContext, resolved[CHILDREN], resolved);\r\n              acc.push(resolved);\r\n          }\r\n          return acc;\r\n      }, []);\r\n      return resolveds;\r\n  }\n\n  function rendererProvider(mutate /* , elementProps, context, view, glueNode */) {\r\n      return function () {\r\n          var destroys = [];\r\n          var lifecycleEvents = [];\r\n          return [\r\n              // resolver\r\n              function (next, recursion) { return partial(resolveNode, [next, recursion]); },\r\n              // pather\r\n              function (next, recursion) { return partial(patch, [mutate, destroys, lifecycleEvents, next, recursion]); },\r\n              // finallyer\r\n              function (next) { return function () {\r\n                  lifecycleEvents.reduceRight(function (_, lifecycleEvent) { return lifecycleEvent(); }, 0);\r\n                  destroys.reduceRight(function (_, destroy) { return destroy(); }, 0);\r\n                  next();\r\n              }; },\r\n          ];\r\n      };\r\n  }\n\n  var lifeCycleEventPath = function (name) { return PROPS + \".on\" + name; };\n\n  function mergeGlueNode(vNode, glueNode) {\r\n      if (!glueNode) {\r\n          return createGlueNode(vNode);\r\n      }\r\n      if (!vNode) {\r\n          deepSet(glueNode, PREV_PROPS, glueNode[PROPS]);\r\n          glueNode[LIFECYCLE] = (glueNode[LIFECYCLE] === REMOVING || glueNode[LIFECYCLE] === DESTROY)\r\n              ? glueNode[LIFECYCLE]\r\n              : (deepGet(glueNode, lifeCycleEventPath(REMOVE))\r\n                  ? REMOVE\r\n                  : DESTROY);\r\n          return glueNode;\r\n      }\r\n      deepSet(glueNode, PREV_PROPS, glueNode[PROPS]);\r\n      glueNode[PROPS] = vNode[PROPS];\r\n      glueNode[KEY] = vNode[KEY];\r\n      glueNode[NAME] = vNode[NAME];\r\n      glueNode[LIFECYCLE] = UPDATE;\r\n      var indexedPrevChildren = glueNode[CHILDREN].map(function (child, i) { return (child.i = i, child); });\r\n      var children = vNode[CHILDREN].map(function (child) {\r\n          var prevChild, _prevChild, i;\r\n          for (i = 0; i < indexedPrevChildren.length; i++) {\r\n              _prevChild = indexedPrevChildren[i];\r\n              if (child[NAME] == _prevChild[NAME]\r\n                  && child[KEY] == _prevChild[KEY]\r\n                  && (UPDATE === _prevChild[LIFECYCLE] || CREATE === _prevChild[LIFECYCLE])) {\r\n                  prevChild = _prevChild;\r\n                  break;\r\n              }\r\n          }\r\n          if (prevChild) {\r\n              indexedPrevChildren.splice(i, 1);\r\n              return mergeGlueNode(child, prevChild);\r\n          }\r\n          else {\r\n              return mergeGlueNode(child);\r\n          }\r\n      });\r\n      indexedPrevChildren.reduceRight(function (_, child) {\r\n          child = mergeGlueNode(undefined, child);\r\n          if (0 === child.i) {\r\n              children.unshift(child);\r\n          }\r\n          else {\r\n              var index = child.i - 1;\r\n              var i = void 0;\r\n              for (i = 0; i < children.length; i++) {\r\n                  if (index === children[i].i) {\r\n                      children.splice(i + 1, 0, child);\r\n                      return 0;\r\n                  }\r\n              }\r\n              children.push(child);\r\n          }\r\n          return 0;\r\n      }, 0);\r\n      glueNode[CHILDREN] = children;\r\n      return glueNode;\r\n  }\n\n  function rendering(glueNode, view, rootContext, eventProxy, elementProps, renderers) {\r\n      var rootProps = remodelProps(glueNode[PROPS]);\r\n      var resolverRecursion = function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return resolver.apply(null, args);\r\n      };\r\n      var resolver = renderers.map(function (v) { return v[0]; }).reduce(wrapOnion, [noop, resolverRecursion])[0];\r\n      var patcherRecursion = function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return patcher.apply(null, args);\r\n      };\r\n      var patcher = renderers.map(function (v) { return v[1]; }).reduce(wrapOnion, [noop, patcherRecursion])[0];\r\n      var finallyer = renderers.map(function (v) { return v[2]; }).reduce(wrapOnion, [noop, noop])[0];\r\n      var vNode = resolver(rootContext, x(view, rootProps, []))[0];\r\n      var node = mergeGlueNode(vNode, glueNode);\r\n      glueNode = patcher(node, 'svg' === node.name, eventProxy, elementProps, false);\r\n      finallyer();\r\n      return glueNode;\r\n  }\r\n  function wrapOnion(_a, stack) {\r\n      var next = _a[0], recursion = _a[1];\r\n      return [stack ? stack(next, recursion) : next, recursion];\r\n  }\r\n  function noop() { }\n\n  function atto(view, elementOrGlueNode, options) {\r\n      if (options === void 0) { options = {}; }\r\n      var scheduled = false;\r\n      var glueNode = elementOrGlueNode instanceof Element\r\n          ? createGlueNodeByElement(elementOrGlueNode)\r\n          : elementOrGlueNode;\r\n      var rootProps = remodelProps(glueNode[PROPS]);\r\n      var rootContext = deepGet(rootProps, CONTEXT);\r\n      var elementProps = new WeakMap();\r\n      var middlewares = MIDDLEWARES in options && options[MIDDLEWARES] || [];\r\n      var rendererProviders = [rendererProvider]\r\n          .concat(middlewares)\r\n          .map(function (provider) { return provider(mutate, elementProps, rootContext, view, glueNode); });\r\n      function mutate(context, path) {\r\n          if (path === void 0) { path = ''; }\r\n          if (context) {\r\n              if (context instanceof Promise) {\r\n                  return context.then(function (newContext) { return mutate(newContext, path); });\r\n              }\r\n              if ('function' === typeof context) {\r\n                  return context(mutate, rootContext);\r\n              }\r\n              if ('object' === typeof context) {\r\n                  var targetContext = getTargetContext(path || '');\r\n                  if (context === targetContext) {\r\n                      return;\r\n                  }\r\n                  var newContext = assign(assign({}, targetContext), context);\r\n                  if (path) {\r\n                      deepSet(rootContext, path, newContext);\r\n                  }\r\n                  else {\r\n                      rootContext = newContext;\r\n                  }\r\n                  scheduleRender();\r\n              }\r\n          }\r\n      }\r\n      function getTargetContext(path, def) {\r\n          if (def === void 0) { def = {}; }\r\n          return (path ? deepGet(rootContext, path) : rootContext) || def;\r\n      }\r\n      function eventProxy(event) {\r\n          var element = event.currentTarget;\r\n          var props = elementProps.get(element);\r\n          var path = deepGet(props, PATH);\r\n          var newContext = props[\"on\" + event.type](getTargetContext(path), props, event);\r\n          mutate(newContext, path);\r\n      }\r\n      function render() {\r\n          glueNode = rendering(glueNode, view, rootContext, eventProxy, elementProps, rendererProviders.map(function (provider) { return provider(rootContext); }));\r\n      }\r\n      function rendered() {\r\n          scheduled = false;\r\n      }\r\n      function renderedError(e) {\r\n          rendered();\r\n          throw e;\r\n      }\r\n      function scheduleRender() {\r\n          if (!scheduled) {\r\n              scheduled = true;\r\n              Promise.resolve().then(render).then(rendered, renderedError);\r\n          }\r\n      }\r\n      return mutate;\r\n  }\n\n  function currentOnlyEventHandler(eventHandler) {\r\n      return function (context, props, event) {\r\n          if (event.currentTarget === event.target) {\r\n              return eventHandler(context, props, event);\r\n          }\r\n      };\r\n  }\n\n  exports.atto = atto;\n  exports.currentOnlyEventHandler = currentOnlyEventHandler;\n  exports.x = x;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}