{"version":3,"sources":["dist/xatto.js"],"names":["global","factory","exports","module","define","amd","xatto","this","CONTEXT","EXTRA","FILL","PATH","SLICE","TEXT","MIDDLEWARES","CHILDREN","KEY","NAME","PROPS","ELEMENT","LIFECYCLE","PREV_PROPS","PREV","CREATE","DESTROY","REMOVE","REMOVING","UPDATE","assign","target","source","key","hasOwnProperty","deepSet","value","separator","idx","indexOf","current","slice","nexts","next","split","parseInt","createGlueNode","vNode","newGlueNode","i","map","child","TEXT_NODE","createVNode","mayBeTextNode","name","props","children","node","deepGet","mutate","getContext","setContext","scheduleRender","context","path","Promise","then","newContext","targetContext","remodelProps","extra","XLINK_NS","updateAttribute","element","oldValue","isSVG","eventProxy","eventName","Function","addEventListener","removeEventListener","nullOrFalse","removeAttribute","ns","originName","replace","setAttribute","setAttributeNS","removeAttributeNS","shouldBeCaptureLifecycles","patcher","destroys","lifecycleEvents","elementProps","elementRemoveds","recursion","glueNode","captureLifecycle","_a","rawLifecycle","Element","has","lifecycleEvent","shouldBeCaptureLifecycle","shouldBeCaptureLifecycleByCaptured","lifecycle","detail","document","createTextNode","createElementNS","createElement","name_1","set","prevProps","updated","nodeValue","updateElement","push","parentElement","removeChild","done","resolve","elm","option","event","CustomEvent","dispatchEvent","fireLifeCycleEventProvider","toLowerCase","reduce","acc","childNode","patchedChild","concat","v","reduceRight","ref","insertBefore","isVNode","x","rest","_i","arguments","length","pop","Array","isArray","unshift","resolveChildren","parentNode","childs","apply","resolverProvider","rawProps","parentProps","parentPath","sliced","resolved","resolver","rendererProvider","WeakMap","currentTarget","get","type","_","destroy","rendering","view","renderers","wrapOnion","noop","args","finallyer","vNodes","container","mergeGlueNode","indexedPrevChildren","prevChild","_prevChild","splice","undefined","index","stack","memorize","atto","containerOrGlueNode","options","scheduled","nodeName","rootContext","middlewares","render","rendered","renderedError","rendererProviders","provider","def","e","currentOnlyEventHandler","eventHandler"],"mappings":"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","sourcesContent":["/*\nxatto v1.0.0-rc.6\nhttps://github.com/atomita/xatto\nReleased under the MIT License.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.xatto = {})));\n}(this, (function (exports) { 'use strict';\n\n  var CONTEXT = 'xa.context';\r\n  var EXTRA = 'xa.extra';\r\n  var FILL = 'xa.fill';\r\n  var PATH = 'xa.path';\r\n  var SLICE = 'xa.slice';\r\n  var TEXT = 'xa.text';\n\n  var MIDDLEWARES = 'middlewares';\n\n  var CHILDREN = 'children';\r\n  var KEY = 'key';\r\n  var NAME = 'name';\r\n  var PROPS = 'props';\n\n  var ELEMENT = 'element';\r\n  var LIFECYCLE = 'lifecycle';\r\n  var PREV = 'prev';\r\n  var PREV_PROPS = PREV + \".\" + PROPS;\n\n  var CREATE = 'create';\r\n  var DESTROY = 'destroy';\r\n  var REMOVE = 'remove';\r\n  var REMOVING = 'removing';\r\n  var UPDATE = 'update';\n\n  function assign(target, source) {\r\n      for (var key in source) {\r\n          if (source.hasOwnProperty(key)) {\r\n              target[key] = source[key];\r\n          }\r\n      }\r\n      return target;\r\n  }\n\n  /**\r\n   * Set an object item to a given value using separator notation.\r\n   *\r\n   * @param {any} target\r\n   * @param {string} key\r\n   * @param {any} value\r\n   * @param {string} separator\r\n   * @return {boolean}\r\n   */\r\n  function deepSet(target, key, value, separator) {\r\n      if (separator === void 0) { separator = '.'; }\r\n      while (true) {\r\n          if ('object' !== typeof target) {\r\n              return false;\r\n          }\r\n          var idx = key.indexOf(separator);\r\n          if (idx < 0) {\r\n              target[key] = value;\r\n              return true;\r\n          }\r\n          var current = key.slice(0, idx);\r\n          var nexts = key.slice(idx + 1);\r\n          if (null == target[current]) {\r\n              var next = nexts.split(separator, 1)[0];\r\n              target[current] = next === \"\" + parseInt(next, 10) ? [] : {};\r\n          }\r\n          target = target[current];\r\n          key = nexts;\r\n      }\r\n  }\n\n  function createGlueNode(vNode) {\r\n      var newGlueNode = assign({}, vNode);\r\n      newGlueNode.i = 0;\r\n      newGlueNode[LIFECYCLE] = CREATE;\r\n      newGlueNode[CHILDREN] = vNode[CHILDREN].map(function (child) { return createGlueNode(child); });\r\n      deepSet(newGlueNode, PREV_PROPS, {});\r\n      return newGlueNode;\r\n  }\n\n  var TEXT_NODE = 'xa-txt';\n\n  function createVNode(mayBeTextNode, name, props, children) {\r\n      if (props === void 0) { props = {}; }\r\n      if (children === void 0) { children = []; }\r\n      var node = {};\r\n      node[NAME] = name;\r\n      node[PROPS] = props;\r\n      node[CHILDREN] = children;\r\n      node[KEY] = props.key;\r\n      if (mayBeTextNode && 'function' !== typeof name) {\r\n          node[NAME] = TEXT_NODE;\r\n          deepSet(node[PROPS], TEXT, name);\r\n      }\r\n      return node;\r\n  }\n\n  function createGlueNodeByElement(element) {\r\n      var node = createGlueNode(createVNode(false, element.nodeName));\r\n      node[ELEMENT] = element;\r\n      return node;\r\n  }\n\n  /**\r\n   * Get an item from an object using separator notation.\r\n   *\r\n   * @typeparam {T}\r\n   * @param {any} target\r\n   * @param {string} key\r\n   * @param {string} separator\r\n   * @return {T}\r\n   */\r\n  function deepGet(target, key, separator) {\r\n      if (separator === void 0) { separator = '.'; }\r\n      while (true) {\r\n          if (target == null) {\r\n              return target;\r\n          }\r\n          var idx = key.indexOf(separator);\r\n          if (idx < 0) {\r\n              return target[key];\r\n          }\r\n          target = target[key.slice(0, idx)];\r\n          key = key.slice(idx + 1);\r\n      }\r\n  }\n\n  function mutate(getContext, setContext, scheduleRender, context, path) {\r\n      if (context) {\r\n          if (context instanceof Promise) {\r\n              return context.then(function (newContext) { return mutate(getContext, setContext, scheduleRender, newContext, path); });\r\n          }\r\n          if ('function' === typeof context) {\r\n              return context(mutate, getContext);\r\n          }\r\n          if ('object' === typeof context) {\r\n              var targetContext = getContext(path);\r\n              if (context === targetContext) {\r\n                  return;\r\n              }\r\n              var newContext = assign(assign({}, targetContext), context);\r\n              setContext(newContext, path);\r\n              scheduleRender();\r\n          }\r\n      }\r\n  }\n\n  function mutateProvider(getContext, setContext, scheduleRender) {\r\n      return function (context, path) {\r\n          if (path === void 0) { path = ''; }\r\n          return mutate(getContext, setContext, scheduleRender, context, path);\r\n      };\r\n  }\n\n  function remodelProps(props, context, extra, path) {\r\n      deepSet(props, CONTEXT, context || deepGet(props, CONTEXT) || {});\r\n      deepSet(props, EXTRA, extra || deepGet(props, EXTRA) || {});\r\n      deepSet(props, PATH, path || '');\r\n      return props;\r\n  }\n\n  function eventProxyProvider(mutate, getContext, elementProps) {\r\n      return function (event) {\r\n          var element = event.currentTarget;\r\n          var props = elementProps.get(element);\r\n          var path = deepGet(props, PATH);\r\n          var detail = event.detail || {};\r\n          var newContext = props[\"on\" + event.type](getContext(path), detail, props, event);\r\n          mutate(newContext, path);\r\n      };\r\n  }\n\n  var XLINK_NS = \"http://www.w3.org/1999/xlink\";\n\n  function updateAttribute(element, name, value, oldValue, isSVG, eventProxy) {\r\n      if ('object' === typeof value) {\r\n          // noop\r\n      }\r\n      else {\r\n          if (name[0] === \"o\" && name[1] === \"n\") {\r\n              var eventName = name.slice(2);\r\n              if (!(value instanceof Function)) {\r\n                  element.removeEventListener(eventName, eventProxy);\r\n              }\r\n              else if (!(oldValue instanceof Function)) {\r\n                  element.addEventListener(eventName, eventProxy);\r\n              }\r\n          }\r\n          else {\r\n              var nullOrFalse = value == null || value === false;\r\n              if (name in element &&\r\n                  name !== \"list\" &&\r\n                  name !== \"draggable\" &&\r\n                  name !== \"spellcheck\" &&\r\n                  name !== \"translate\" &&\r\n                  !isSVG) {\r\n                  if (nullOrFalse) {\r\n                      element.removeAttribute(name);\r\n                  }\r\n                  else {\r\n                      element[name] = value == null ? \"\" : value;\r\n                  }\r\n              }\r\n              else {\r\n                  var ns = false;\r\n                  if (isSVG) {\r\n                      var originName = name;\r\n                      name = name.replace(/^xlink:?/, \"\");\r\n                      ns = name !== originName;\r\n                  }\r\n                  switch ((nullOrFalse ? 1 : 0) + ((ns ? 1 : 0) << 1)) {\r\n                      case 0:\r\n                          element.setAttribute(name, value);\r\n                          break;\r\n                      case 1:\r\n                          element.removeAttribute(name);\r\n                          break;\r\n                      case 2:\r\n                          element.setAttributeNS(XLINK_NS, name, value);\r\n                          break;\r\n                      case 3:\r\n                          element.removeAttributeNS(XLINK_NS, name);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  }\n\n  function createElement(node, isSVG, eventProxy, elementProps) {\r\n      var props = node[PROPS] || {};\r\n      if (node[NAME] === TEXT_NODE) {\r\n          return document.createTextNode(deepGet(props, TEXT));\r\n      }\r\n      var element = (isSVG = isSVG || node[NAME] === \"svg\")\r\n          ? document.createElementNS(\"http://www.w3.org/2000/svg\", node[NAME])\r\n          : document.createElement(node[NAME]);\r\n      for (var name_1 in props) {\r\n          updateAttribute(element, name_1, props[name_1], null, isSVG, eventProxy);\r\n      }\r\n      elementProps.set(element, props);\r\n      return element;\r\n  }\n\n  function fireLifeCycleEventProvider(elm, eventName, option) {\r\n      if (option === void 0) { option = {}; }\r\n      var event = new CustomEvent(eventName, option);\r\n      return function () { return elm.dispatchEvent(event); };\r\n  }\n\n  function updateElement(node, isSVG, eventProxy, elementProps) {\r\n      var element = node[ELEMENT];\r\n      var props = node[PROPS];\r\n      var prevProps = deepGet(node, PREV_PROPS) || {};\r\n      var updated = false;\r\n      if (node[NAME] === TEXT_NODE) {\r\n          var value = deepGet(props, TEXT);\r\n          var oldValue = deepGet(prevProps, TEXT);\r\n          updated = value != oldValue;\r\n          if (updated) {\r\n              element.nodeValue = deepGet(props, TEXT);\r\n          }\r\n          return [element, updated];\r\n      }\r\n      for (var name_1 in props) {\r\n          if (props[name_1] !==\r\n              (name_1 === \"value\" || name_1 === \"checked\"\r\n                  ? element[name_1]\r\n                  : prevProps[name_1])) {\r\n              updateAttribute(element, name_1, props[name_1], prevProps[name_1], isSVG, eventProxy);\r\n              updated = true;\r\n          }\r\n      }\r\n      elementProps.set(element, props);\r\n      return [element, updated];\r\n  }\n\n  var shouldBeCaptureLifecycles = {};\r\n  shouldBeCaptureLifecycles[REMOVE] = 1;\r\n  shouldBeCaptureLifecycles[REMOVING] = 2;\r\n  shouldBeCaptureLifecycles[DESTROY] = 3;\r\n  function patcher(mutate, destroys, lifecycleEvents, eventProxy, elementProps, elementRemoveds, next, recursion, glueNode, isSVG, captureLifecycle) {\r\n      var _a;\r\n      var newGlueNode = assign({}, glueNode);\r\n      var element = glueNode[ELEMENT];\r\n      if (!isSVG && glueNode[NAME] === 'svg') {\r\n          isSVG = true;\r\n      }\r\n      var rawLifecycle = glueNode[LIFECYCLE];\r\n      if (rawLifecycle === REMOVING\r\n          && element instanceof Element\r\n          && elementRemoveds.has(element)) {\r\n          rawLifecycle = DESTROY;\r\n      }\r\n      var shouldBeCaptureLifecycle = shouldBeCaptureLifecycles[rawLifecycle];\r\n      var shouldBeCaptureLifecycleByCaptured = shouldBeCaptureLifecycles[captureLifecycle];\r\n      var lifecycle = shouldBeCaptureLifecycleByCaptured\r\n          && (!shouldBeCaptureLifecycle || shouldBeCaptureLifecycle < shouldBeCaptureLifecycleByCaptured)\r\n          && captureLifecycle\r\n          || rawLifecycle;\r\n      newGlueNode[LIFECYCLE] = lifecycle;\r\n      var lifecycleEvent;\r\n      var detail = null;\r\n      switch (lifecycle) {\r\n          case CREATE:\r\n              lifecycleEvent = true;\r\n              element = createElement(glueNode, isSVG, eventProxy, elementProps);\r\n              break;\r\n          case UPDATE:\r\n              _a = updateElement(glueNode, isSVG, eventProxy, elementProps), element = _a[0], lifecycleEvent = _a[1];\r\n              break;\r\n          case DESTROY:\r\n              lifecycleEvent = true;\r\n              if (rawLifecycle == DESTROY) {\r\n                  destroys.push(function () { return element.parentElement && element.parentElement.removeChild(element); });\r\n              }\r\n              break;\r\n          case REMOVE:\r\n              lifecycleEvent = true;\r\n              newGlueNode[LIFECYCLE] = REMOVING;\r\n              detail = {\r\n                  done: function () {\r\n                      elementRemoveds.set(element, true);\r\n                      Promise.resolve({}).then(mutate);\r\n                  }\r\n              };\r\n      }\r\n      if (lifecycleEvent && element instanceof Element) {\r\n          lifecycleEvents.push(fireLifeCycleEventProvider(element, lifecycle.toLowerCase(), { detail: detail }));\r\n      }\r\n      var children = glueNode[CHILDREN].reduce(function (acc, childNode) {\r\n          var patchedChild = recursion(childNode, isSVG, lifecycle);\r\n          return patchedChild ? acc.concat(patchedChild) : acc;\r\n      }, []);\r\n      if (lifecycle === DESTROY) {\r\n          return null;\r\n      }\r\n      children.map(function (v) { return v.element; }).reduceRight(function (ref, elm) {\r\n          element.insertBefore(elm, ref);\r\n          return elm;\r\n      }, null);\r\n      newGlueNode[CHILDREN] = children;\r\n      newGlueNode[ELEMENT] = element;\r\n      return newGlueNode;\r\n  }\n\n  function patcherProvider(mutate, destroys, lifecycleEvents, eventProxy, elementProps, elementRemoveds) {\r\n      return function (next, recursion) { return function (glueNode, isSVG, captureLifecycle) { return patcher(mutate, destroys, lifecycleEvents, eventProxy, elementProps, elementRemoveds, next, recursion, glueNode, isSVG, captureLifecycle); }; };\r\n  }\n\n  function isVNode(value) {\r\n      return null != value\r\n          && 'object' === typeof value\r\n          && PROPS in value\r\n          && CHILDREN in value\r\n          && KEY in value\r\n          && NAME in value;\r\n  }\n\n  function x(name, props) {\r\n      var rest = [];\r\n      for (var _i = 2; _i < arguments.length; _i++) {\r\n          rest[_i - 2] = arguments[_i];\r\n      }\r\n      var children = [];\r\n      while (rest.length) {\r\n          var node = rest.pop();\r\n          if (node && Array.isArray(node)) {\r\n              rest = rest.concat(node);\r\n          }\r\n          else if (node != null && node !== true && node !== false) {\r\n              children.unshift(isVNode(node) && node || createVNode(true, node));\r\n          }\r\n      }\r\n      return createVNode(false, name, props || {}, children);\r\n  }\n\n  function resolveChildren(next, recursion, children, parentNode) {\r\n      return children.reduce(function (childs, child) {\r\n          childs.push.apply(childs, recursion(child, parentNode));\r\n          return childs;\r\n      }, []);\r\n  }\r\n  function resolver(getContext, setContext, next, recursion, node, parentNode) {\r\n      if (!node) {\r\n          return [];\r\n      }\r\n      if (x === node.name) { // Fragment\r\n          return resolveChildren(next, recursion, node[CHILDREN], parentNode);\r\n      }\r\n      var rawProps = node[PROPS];\r\n      var parentProps = parentNode && parentNode[PROPS] || {};\r\n      var path = deepGet(rawProps, PATH);\r\n      if (!path) {\r\n          var parentPath = deepGet(parentProps, PATH) || '';\r\n          var slice = deepGet(rawProps, SLICE);\r\n          path = (parentPath && slice)\r\n              ? parentPath + \".\" + slice\r\n              : (slice || parentPath);\r\n      }\r\n      var sliced = getContext(path);\r\n      if (!sliced) {\r\n          var fill = deepGet(rawProps, FILL) || {};\r\n          sliced = assign({}, fill);\r\n          setContext(sliced, path);\r\n      }\r\n      var context = sliced;\r\n      var extra = assign(assign({}, deepGet(rawProps, EXTRA) || {}), parentNode && deepGet(parentNode, PROPS + \".\" + EXTRA) || {});\r\n      var props = remodelProps(rawProps, context, extra, path);\r\n      var resolveds = (typeof node.name === \"function\"\r\n          ? recursion(node.name(props, node[CHILDREN]), node)\r\n          : [node]).reduce(function (acc, resolved) {\r\n          if (isVNode(resolved)) {\r\n              resolved[CHILDREN] = resolveChildren(next, recursion, resolved[CHILDREN], resolved);\r\n              acc.push(resolved);\r\n          }\r\n          return acc;\r\n      }, []);\r\n      return resolveds;\r\n  }\n\n  function resolverProvider(getContext, setContext) {\r\n      return function (next, recursion) { return function (node, parentNode) { return resolver(getContext, setContext, next, recursion, node, parentNode); }; };\r\n  }\n\n  function rendererProvider(mutate, getContext, setContext /*, view, glueNode */) {\r\n      var elementProps = new WeakMap();\r\n      var elementRemoveds = new WeakMap();\r\n      var eventProxy = eventProxyProvider(mutate, getContext, elementProps);\r\n      return function () {\r\n          var destroys = [];\r\n          var lifecycleEvents = [];\r\n          return [\r\n              // resolver\r\n              resolverProvider(getContext, setContext),\r\n              // pather\r\n              patcherProvider(mutate, destroys, lifecycleEvents, eventProxy, elementProps, elementRemoveds),\r\n              // finallyer\r\n              function () { return function () {\r\n                  lifecycleEvents.reduceRight(function (_, lifecycleEvent) { return lifecycleEvent(); }, 0);\r\n                  destroys.reduceRight(function (_, destroy) { return destroy(); }, 0);\r\n              }; },\r\n          ];\r\n      };\r\n  }\n\n  function mergeGlueNode(vNode, glueNode) {\r\n      if (!glueNode) {\r\n          return createGlueNode(vNode);\r\n      }\r\n      if (!vNode) {\r\n          deepSet(glueNode, PREV_PROPS, glueNode[PROPS]);\r\n          glueNode[LIFECYCLE] = (glueNode[LIFECYCLE] === REMOVING || glueNode[LIFECYCLE] === DESTROY)\r\n              ? glueNode[LIFECYCLE]\r\n              : (deepGet(glueNode, PROPS + \".on\" + REMOVE)\r\n                  ? REMOVE\r\n                  : DESTROY);\r\n          return glueNode;\r\n      }\r\n      deepSet(glueNode, PREV_PROPS, glueNode[PROPS]);\r\n      glueNode[PROPS] = vNode[PROPS];\r\n      glueNode[KEY] = vNode[KEY];\r\n      glueNode[NAME] = vNode[NAME];\r\n      glueNode[LIFECYCLE] = UPDATE;\r\n      var indexedPrevChildren = glueNode[CHILDREN].map(function (child, i) { return (child.i = i, child); });\r\n      var children = vNode[CHILDREN].map(function (child) {\r\n          var prevChild, _prevChild, i;\r\n          for (i = 0; i < indexedPrevChildren.length; i++) {\r\n              _prevChild = indexedPrevChildren[i];\r\n              if (child[NAME] == _prevChild[NAME]\r\n                  && child[KEY] == _prevChild[KEY]\r\n                  && (UPDATE === _prevChild[LIFECYCLE] || CREATE === _prevChild[LIFECYCLE])) {\r\n                  prevChild = _prevChild;\r\n                  break;\r\n              }\r\n          }\r\n          if (prevChild) {\r\n              indexedPrevChildren.splice(i, 1);\r\n              return mergeGlueNode(child, prevChild);\r\n          }\r\n          else {\r\n              return mergeGlueNode(child);\r\n          }\r\n      });\r\n      indexedPrevChildren.map(function (child) {\r\n          child = mergeGlueNode(undefined, child);\r\n          if (0 === child.i) {\r\n              children.unshift(child);\r\n          }\r\n          else {\r\n              var index = child.i - 1;\r\n              var i = void 0;\r\n              for (i = 0; i < children.length; i++) {\r\n                  if (index === children[i].i) {\r\n                      children.splice(i + 1, 0, child);\r\n                      return;\r\n                  }\r\n              }\r\n              children.push(child);\r\n          }\r\n      });\r\n      glueNode[CHILDREN] = children;\r\n      return glueNode;\r\n  }\n\n  function rendering(glueNode, view, renderers) {\r\n      var resolverRecursion = function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return resolver.apply(null, args);\r\n      };\r\n      var resolver = renderers.map(function (v) { return v[0]; }).reduce(wrapOnion, [noop, resolverRecursion])[0];\r\n      var patcherRecursion = function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return patcher.apply(null, args);\r\n      };\r\n      var patcher = renderers.map(function (v) { return v[1]; }).reduce(wrapOnion, [noop, patcherRecursion])[0];\r\n      var finallyer = renderers.map(function (v) { return v[2]; }).reduce(wrapOnion, [noop, noop])[0];\r\n      var vNodes = resolver(x(view, {}, []));\r\n      var container = assign({}, glueNode);\r\n      container[CHILDREN] = vNodes;\r\n      var node = mergeGlueNode(container, glueNode);\r\n      glueNode = patcher(node, 'svg' === node.name, '');\r\n      finallyer();\r\n      return glueNode;\r\n  }\r\n  function wrapOnion(_a, stack) {\r\n      var next = _a[0], recursion = _a[1];\r\n      return [stack ? stack(next, recursion) : next, recursion];\r\n  }\r\n  function noop() { }\n\n  function atto(view, containerOrGlueNode, options) {\r\n      if (options === void 0) { options = {}; }\r\n      var scheduled = false;\r\n      var glueNode = containerOrGlueNode instanceof Element\r\n          ? createGlueNodeByElement(containerOrGlueNode)\r\n          : containerOrGlueNode;\r\n      var rootProps = remodelProps(glueNode[PROPS]);\r\n      var rootContext = deepGet(rootProps, CONTEXT);\r\n      var middlewares = MIDDLEWARES in options && options[MIDDLEWARES] || [];\r\n      var mutate = mutateProvider(getContext, setContext, scheduleRender);\r\n      var rendererProviders = [rendererProvider]\r\n          .concat(middlewares)\r\n          .map(function (provider) { return provider(mutate, getContext, setContext, view, glueNode); });\r\n      function getContext(path, def) {\r\n          if (def === void 0) { def = {}; }\r\n          return (path ? deepGet(rootContext, path) : rootContext) || def;\r\n      }\r\n      function setContext(newContext, path) {\r\n          if (path) {\r\n              deepSet(rootContext, path, newContext);\r\n          }\r\n          else {\r\n              rootContext = newContext;\r\n          }\r\n      }\r\n      function render() {\r\n          glueNode = rendering(glueNode, view, rendererProviders.map(function (provider) { return provider(); }));\r\n      }\r\n      function rendered() {\r\n          scheduled = false;\r\n      }\r\n      function renderedError(e) {\r\n          rendered();\r\n          throw e;\r\n      }\r\n      function scheduleRender() {\r\n          if (!scheduled) {\r\n              scheduled = true;\r\n              Promise.resolve().then(render).then(rendered, renderedError);\r\n          }\r\n      }\r\n      return mutate;\r\n  }\n\n  var memorize = new WeakMap();\r\n  function currentOnlyEventHandler(eventHandler) {\r\n      if (!memorize.has(eventHandler)) {\r\n          memorize.set(eventHandler, function (context, props, event) {\r\n              if (event.currentTarget === event.target) {\r\n                  return eventHandler(context, props, event);\r\n              }\r\n          });\r\n      }\r\n      return memorize.get(eventHandler);\r\n  }\n\n  exports.atto = atto;\n  exports.currentOnlyEventHandler = currentOnlyEventHandler;\n  exports.x = x;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}