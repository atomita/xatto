{"version":3,"sources":["dist/xatto.js"],"names":["global","factory","exports","module","define","amd","xatto","this","ATTRIBUTES","CHILDREN","CONTEXT","EXTRA","RECYCLE","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","resolveNode","node","parentNode","attributes","context","extra","name","updateAttribute","element","value","oldValue","isSVG","eventListener","events","slice","addEventListener","removeEventListener","setAttribute","removeAttribute","getKey","key","removeElement","parent","done","removeChild","removeChildren","childNodes","ondestroy","cb","onremove","patch","oldNode","lifecycle","newElement","createElement","document","createTextNode","createElementNS","callback_1","oncreate","push","appendChild","name_1","insertBefore","nodeValue","oldAttributes","attrs","callback","onupdate","updateElement","oldKeyed","newKeyed","oldElements","oldChildren","children","i_1","oldKey","k","newKey","recycle","keyed","x","rest","_i","pop","Array","isArray","concat","unshift","atto","view","scheduled","event","currentTarget","mutate","Promise","then","subscribe","entries","map","_a","v","scheduleRender","type","render","rendered","renderedError","e","resolve"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.xatto = {})));\n}(this, (function (exports) { 'use strict';\n\n    var ATTRIBUTES = 'attributes';\r\n    var CHILDREN = 'children';\n\n    var CONTEXT = 'xaContext';\r\n    var EXTRA = 'xaExtra';\r\n    var RECYCLE = 'xaRecycle';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\n\n    function resolveNode(node, parentNode) {\r\n        var attributes = node && node[ATTRIBUTES];\r\n        if (attributes) {\r\n            var context = attributes[CONTEXT]\r\n                || (parentNode && parentNode[ATTRIBUTES] && parentNode[ATTRIBUTES][CONTEXT])\r\n                || {};\r\n            var extra = __assign({}, (attributes[EXTRA] || {}), (parentNode && parentNode[ATTRIBUTES] && parentNode[ATTRIBUTES][EXTRA] || {}));\r\n            attributes[CONTEXT] = context;\r\n            attributes[EXTRA] = extra;\r\n        }\r\n        return (node && typeof node.name === \"function\")\r\n            ? resolveNode(node.name(node[ATTRIBUTES], node[CHILDREN]), node)\r\n            : node != null\r\n                ? node\r\n                : \"\";\r\n    }\n\n    function updateAttribute(element, name, value, oldValue, isSVG, eventListener) {\r\n        if (name === \"key\" || 'object' === typeof value) {\r\n            // noop\r\n        }\r\n        else {\r\n            if (name[0] === \"o\" && name[1] === \"n\") {\r\n                if (!element.events) {\r\n                    element.events = {};\r\n                }\r\n                element.events[(name = name.slice(2))] = value;\r\n                if (value) {\r\n                    if (!oldValue) {\r\n                        element.addEventListener(name, eventListener);\r\n                    }\r\n                }\r\n                else {\r\n                    element.removeEventListener(name, eventListener);\r\n                }\r\n            }\r\n            else if (name in element && name !== \"list\" && !isSVG) {\r\n                element[name] = value == null ? \"\" : value;\r\n            }\r\n            else if (value != null && value !== false) {\r\n                element.setAttribute(name, value);\r\n            }\r\n            if (value == null || value === false) {\r\n                element.removeAttribute(name);\r\n            }\r\n        }\r\n    }\n\n    function createElement(node, lifecycle, isSVG, eventListener) {\r\n        var element = typeof node === \"string\" || typeof node === \"number\"\r\n            ? document.createTextNode(node)\r\n            : (isSVG = isSVG || node.name === \"svg\")\r\n                ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.name)\r\n                : document.createElement(node.name);\r\n        var attributes = node[ATTRIBUTES];\r\n        if (attributes) {\r\n            var callback_1 = attributes.oncreate;\r\n            if (callback_1) {\r\n                lifecycle.push(function () {\r\n                    callback_1(element, {}, attributes[CONTEXT], attributes[EXTRA]);\r\n                });\r\n            }\r\n            for (var i = 0; i < node[CHILDREN].length; i++) {\r\n                element.appendChild(createElement((node[CHILDREN][i] = resolveNode(node[CHILDREN][i], node)), lifecycle, isSVG, eventListener));\r\n            }\r\n            for (var name_1 in attributes) {\r\n                updateAttribute(element, name_1, attributes[name_1], null, isSVG, eventListener);\r\n            }\r\n            element.context = attributes[CONTEXT];\r\n            element.extra = attributes[EXTRA];\r\n        }\r\n        return element;\r\n    }\n\n    function getKey(node) {\r\n        return node ? node.key : null;\r\n    }\n\n    function removeChildren(element, node) {\r\n        var attributes = node[ATTRIBUTES];\r\n        if (attributes) {\r\n            for (var i = 0; i < node[CHILDREN].length; i++) {\r\n                removeChildren(element.childNodes[i], node[CHILDREN][i]);\r\n            }\r\n            if (attributes.ondestroy) {\r\n                attributes.ondestroy(element, attributes, attributes[CONTEXT], attributes[EXTRA]);\r\n            }\r\n        }\r\n        return element;\r\n    }\n\n    function removeElement(parent, element, node) {\r\n        function done() {\r\n            parent.removeChild(removeChildren(element, node));\r\n        }\r\n        var attributes = node[ATTRIBUTES] || {};\r\n        var cb = attributes.onremove;\r\n        if (cb) {\r\n            cb(element, done, attributes, attributes[CONTEXT], attributes[EXTRA]);\r\n        }\r\n        else {\r\n            done();\r\n        }\r\n    }\n\n    function updateElement(element, oldAttributes, attributes, lifecycle, isSVG, eventListener) {\r\n        var attrs = __assign({}, oldAttributes, attributes);\r\n        for (var name_1 in attrs) {\r\n            if (attributes[name_1] !==\r\n                (name_1 === \"value\" || name_1 === \"checked\"\r\n                    ? element[name_1]\r\n                    : oldAttributes[name_1])) {\r\n                updateAttribute(element, name_1, attributes[name_1], oldAttributes[name_1], isSVG, eventListener);\r\n            }\r\n        }\r\n        element.context = attributes[CONTEXT];\r\n        element.extra = attributes[EXTRA];\r\n        var callback = attributes[RECYCLE] ? attributes.oncreate : attributes.onupdate;\r\n        if (callback) {\r\n            lifecycle.push(function () {\r\n                callback(element, oldAttributes, attributes[CONTEXT], attributes[EXTRA]);\r\n            });\r\n        }\r\n    }\n\n    function patch(parent, element, oldNode, node, lifecycle, isSVG, eventListener) {\r\n        if (isSVG === void 0) { isSVG = false; }\r\n        if (node === oldNode) {\r\n            // noop\r\n        }\r\n        else if (oldNode == null || oldNode.name !== node.name) {\r\n            var newElement = createElement(node, lifecycle, isSVG, eventListener);\r\n            parent.insertBefore(newElement, element);\r\n            if (oldNode != null) {\r\n                removeElement(parent, element, oldNode);\r\n            }\r\n            element = newElement;\r\n        }\r\n        else if (oldNode.name == null) {\r\n            element.nodeValue = node;\r\n        }\r\n        else {\r\n            updateElement(element, oldNode[ATTRIBUTES], node[ATTRIBUTES], lifecycle, (isSVG = isSVG || node.name === \"svg\"), eventListener);\r\n            var oldKeyed = {};\r\n            var newKeyed = {};\r\n            var oldElements = [];\r\n            var oldChildren = oldNode[CHILDREN];\r\n            var children = node[CHILDREN];\r\n            for (var i_1 = 0; i_1 < oldChildren.length; i_1++) {\r\n                oldElements[i_1] = element.childNodes[i_1];\r\n                var oldKey = getKey(oldChildren[i_1]);\r\n                if (oldKey != null) {\r\n                    oldKeyed[oldKey] = [oldElements[i_1], oldChildren[i_1]];\r\n                }\r\n            }\r\n            var i = 0;\r\n            var k = 0;\r\n            while (k < children.length) {\r\n                var oldKey = getKey(oldChildren[i]);\r\n                var newKey = getKey(children[k] = resolveNode(children[k], node));\r\n                if (newKeyed[oldKey]) {\r\n                    i++;\r\n                    continue;\r\n                }\r\n                if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\r\n                    if (oldKey == null) {\r\n                        removeElement(element, oldElements[i], oldChildren[i]);\r\n                    }\r\n                    i++;\r\n                    continue;\r\n                }\r\n                var recycle = (children[k][ATTRIBUTES] || {})[RECYCLE];\r\n                if (newKey == null || true === recycle) {\r\n                    if (oldKey == null) {\r\n                        patch(element, oldElements[i], oldChildren[i], children[k], lifecycle, isSVG, eventListener);\r\n                        k++;\r\n                    }\r\n                    i++;\r\n                }\r\n                else {\r\n                    var keyed = oldKeyed[newKey] || [];\r\n                    if (oldKey === newKey) {\r\n                        patch(element, keyed[0], keyed[1], children[k], lifecycle, isSVG, eventListener);\r\n                        i++;\r\n                    }\r\n                    else if (keyed[0]) {\r\n                        patch(element, element.insertBefore(keyed[0], oldElements[i]), keyed[1], children[k], lifecycle, isSVG, eventListener);\r\n                    }\r\n                    else {\r\n                        patch(element, oldElements[i], null, children[k], lifecycle, isSVG, eventListener);\r\n                    }\r\n                    newKeyed[newKey] = children[k];\r\n                    k++;\r\n                }\r\n            }\r\n            while (i < oldChildren.length) {\r\n                if (getKey(oldChildren[i]) == null) {\r\n                    removeElement(element, oldElements[i], oldChildren[i]);\r\n                }\r\n                i++;\r\n            }\r\n            for (var key in oldKeyed) {\r\n                if (!newKeyed[key]) {\r\n                    removeElement(element, oldKeyed[key][0], oldKeyed[key][1]);\r\n                }\r\n            }\r\n        }\r\n        return element;\r\n    }\n\n    function x(name, attributes) {\r\n        var rest = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            rest[_i - 2] = arguments[_i];\r\n        }\r\n        var children = [];\r\n        while (rest.length) {\r\n            var node = rest.pop();\r\n            if (node && Array.isArray(node)) {\r\n                rest = rest.concat(node);\r\n            }\r\n            else if (node != null && node !== true && node !== false) {\r\n                children.unshift(node);\r\n            }\r\n        }\r\n        return {\r\n            name: name,\r\n            attributes: attributes || {},\r\n            children: children,\r\n            key: attributes && attributes.key\r\n        };\r\n    }\n\n    function atto(view, element, oldNode) {\r\n        if (oldNode === void 0) { oldNode = null; }\r\n        var scheduled = false;\r\n        var attributes = oldNode && oldNode[ATTRIBUTES] || {};\r\n        function eventListener(event) {\r\n            var element = event.currentTarget;\r\n            mutate(element.events[event.type](event, element.context || {}, element.extra || {}));\r\n            function mutate(context) {\r\n                if (context && context !== element.context) {\r\n                    if (context instanceof Promise) {\r\n                        context.then(mutate);\r\n                    }\r\n                    else if ('function' === typeof context.subscribe) {\r\n                        context.subscribe(mutate); // @todo unsubscribe\r\n                    }\r\n                    else if ('object' === typeof context) {\r\n                        Object.entries(context).map(function (_a) {\r\n                            var k = _a[0], v = _a[1];\r\n                            return element.context[k] = v;\r\n                        });\r\n                        scheduleRender();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        function render() {\r\n            var lifecycle = [];\r\n            var node = resolveNode(x(view, attributes, oldNode && oldNode[CHILDREN]), x('div', {}, []));\r\n            element = patch(element.parentNode, element, oldNode, (oldNode = node), lifecycle, 'svg' === node.name, eventListener);\r\n            attributes[RECYCLE] = false;\r\n            while (lifecycle.length)\r\n                lifecycle.pop()();\r\n        }\r\n        function rendered() {\r\n            scheduled = false;\r\n        }\r\n        function renderedError(e) {\r\n            rendered();\r\n            throw e;\r\n        }\r\n        function scheduleRender() {\r\n            if (!scheduled) {\r\n                scheduled = true;\r\n                Promise.resolve().then(render).then(rendered, renderedError);\r\n            }\r\n        }\r\n        return scheduleRender;\r\n    }\n\n    exports.atto = atto;\n    exports.x = x;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}